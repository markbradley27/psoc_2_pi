ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"DEBUG_UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	DEBUG_UART_initVar
  19              		.bss
  20              		.type	DEBUG_UART_initVar, %object
  21              		.size	DEBUG_UART_initVar, 1
  22              	DEBUG_UART_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.DEBUG_UART_Start,"ax",%progbits
  25              		.align	2
  26              		.global	DEBUG_UART_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	DEBUG_UART_Start, %function
  30              	DEBUG_UART_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\DEBUG_UART.c"
   1:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/DEBUG_UART.c **** * File Name: DEBUG_UART.c
   3:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
   5:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Description:
   6:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
   8:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Note:
   9:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  10:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/DEBUG_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/DEBUG_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/DEBUG_UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  17:.\Generated_Source\PSoC5/DEBUG_UART.c **** #include "DEBUG_UART.h"
  18:.\Generated_Source\PSoC5/DEBUG_UART.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/DEBUG_UART.c **** #if(DEBUG_UART_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #include "DEBUG_UART_IntClock.h"
  21:.\Generated_Source\PSoC5/DEBUG_UART.c **** #endif /* End DEBUG_UART_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  23:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  24:.\Generated_Source\PSoC5/DEBUG_UART.c **** /***************************************
  25:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Global data allocation
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 2


  26:.\Generated_Source\PSoC5/DEBUG_UART.c **** ***************************************/
  27:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  28:.\Generated_Source\PSoC5/DEBUG_UART.c **** uint8 DEBUG_UART_initVar = 0u;
  29:.\Generated_Source\PSoC5/DEBUG_UART.c **** #if( DEBUG_UART_TX_ENABLED && (DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_txBuffer[DEBUG_UART_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/DEBUG_UART.c **** #endif /* End DEBUG_UART_TX_ENABLED */
  34:.\Generated_Source\PSoC5/DEBUG_UART.c **** #if( ( DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/DEBUG_UART.c ****      (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_rxBuffer[DEBUG_UART_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/DEBUG_UART.c ****     volatile uint8 DEBUG_UART_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if (DEBUG_UART_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/DEBUG_UART.c ****         volatile uint8 DEBUG_UART_rxAddressMode = DEBUG_UART_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/DEBUG_UART.c ****         volatile uint8 DEBUG_UART_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/DEBUG_UART.c **** #endif /* End DEBUG_UART_RX_ENABLED */
  46:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  47:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  48:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_Start
  50:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  52:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
  53:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  56:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
  57:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
  58:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  59:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
  60:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
  61:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  62:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Global variables:
  63:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  The DEBUG_UART_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  to the DEBUG_UART_Start() routine.
  68:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  69:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  No.
  71:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  72:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/DEBUG_UART.c **** void DEBUG_UART_Start(void) 
  74:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
  33              		.loc 1 74 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 3


  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/DEBUG_UART.c ****     if(DEBUG_UART_initVar == 0u)
  45              		.loc 1 76 0
  46 0004 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
  47 0008 C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
  48 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  49 000e 002B     		cmp	r3, #0
  50 0010 08D1     		bne	.L2
  77:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
  78:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_Init();
  51              		.loc 1 78 0
  52 0012 FFF7FEFF 		bl	DEBUG_UART_Init
  79:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_initVar = 1u;
  53              		.loc 1 79 0
  54 0016 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
  55 001a C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
  56 001e 4FF00102 		mov	r2, #1
  57 0022 1A70     		strb	r2, [r3, #0]
  58              	.L2:
  80:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
  81:.\Generated_Source\PSoC5/DEBUG_UART.c ****     DEBUG_UART_Enable();
  59              		.loc 1 81 0
  60 0024 FFF7FEFF 		bl	DEBUG_UART_Enable
  82:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
  61              		.loc 1 82 0
  62 0028 80BD     		pop	{r7, pc}
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	DEBUG_UART_Start, .-DEBUG_UART_Start
  66 002a 00BF     		.section	.text.DEBUG_UART_Init,"ax",%progbits
  67              		.align	2
  68              		.global	DEBUG_UART_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	DEBUG_UART_Init, %function
  72              	DEBUG_UART_Init:
  73              	.LFB1:
  83:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  84:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
  85:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_Init
  87:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  89:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
  90:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  DEBUG_UART_Start().
  93:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  94:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
  95:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
  96:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
  97:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
  98:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 4


  99:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 100:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/DEBUG_UART.c **** void DEBUG_UART_Init(void) 
 102:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
  74              		.loc 1 102 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED)
 104:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 105:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RX_INTERRUPT_ENABLED && (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 106:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/DEBUG_UART.c ****             (void)CyIntSetVector(DEBUG_UART_RX_VECT_NUM, &DEBUG_UART_RXISR);
 108:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntSetPriority(DEBUG_UART_RX_VECT_NUM, DEBUG_UART_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 111:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if (DEBUG_UART_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_SetRxAddressMode(DEBUG_UART_RXAddressMode);
 113:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_SetRxAddress1(DEBUG_UART_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_SetRxAddress2(DEBUG_UART_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 117:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXBITCTR_PERIOD_REG = DEBUG_UART_RXBITCTR_INIT;
 119:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXSTATUS_MASK_REG  = DEBUG_UART_INIT_RX_INTERRUPTS_MASK;
 121:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 123:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_TX_ENABLED)
 124:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TX_INTERRUPT_ENABLED && (DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 125:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/DEBUG_UART.c ****             (void)CyIntSetVector(DEBUG_UART_TX_VECT_NUM, &DEBUG_UART_TXISR);
 127:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntSetPriority(DEBUG_UART_TX_VECT_NUM, DEBUG_UART_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 130:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXBITCLKGEN_CTR_REG = DEBUG_UART_BIT_CENTER;
  86              		.loc 1 132 0
  87 0004 46F22443 		movw	r3, #25636
  88 0008 C4F20003 		movt	r3, 16384
  89 000c 4FF00702 		mov	r2, #7
  90 0010 1A70     		strb	r2, [r3, #0]
 133:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXBITCLKTX_COMPLETE_REG = (DEBUG_UART_NUMBER_OF_DATA_BITS +
  91              		.loc 1 133 0
  92 0012 46F23443 		movw	r3, #25652
  93 0016 C4F20003 		movt	r3, 16384
  94 001a 4FF04802 		mov	r2, #72
  95 001e 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 5


 134:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_NUMBER_OF_START_BIT) * DEBUG_UART_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else
 136:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXBITCTR_PERIOD_REG = ((DEBUG_UART_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_NUMBER_OF_START_BIT) * DEBUG_UART_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 140:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TX_INTERRUPT_ENABLED && (DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 142:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXSTATUS_MASK_REG = DEBUG_UART_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else
 144:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXSTATUS_MASK_REG = DEBUG_UART_INIT_TX_INTERRUPTS_MASK;
  96              		.loc 1 144 0
  97 0020 46F28853 		movw	r3, #25992
  98 0024 C4F20003 		movt	r3, 16384
  99 0028 4FF00002 		mov	r2, #0
 100 002c 1A70     		strb	r2, [r3, #0]
 145:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /*End DEBUG_UART_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 147:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_TX_ENABLED */
 148:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 149:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/DEBUG_UART.c ****             (DEBUG_UART_ReadControlRegister() & (uint8)~DEBUG_UART_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/DEBUG_UART.c ****             (uint8)(DEBUG_UART_PARITY_TYPE << DEBUG_UART_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
 101              		.loc 1 154 0
 102 002e BD46     		mov	sp, r7
 103 0030 80BC     		pop	{r7}
 104 0032 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE1:
 107              		.size	DEBUG_UART_Init, .-DEBUG_UART_Init
 108              		.section	.text.DEBUG_UART_Enable,"ax",%progbits
 109              		.align	2
 110              		.global	DEBUG_UART_Enable
 111              		.thumb
 112              		.thumb_func
 113              		.type	DEBUG_UART_Enable, %function
 114              	DEBUG_UART_Enable:
 115              	.LFB2:
 155:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 156:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 157:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_Enable
 159:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 161:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
 162:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 164:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
 165:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 166:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 167:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
 168:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 169:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 170:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Global Variables:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 6


 171:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  DEBUG_UART_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 173:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/DEBUG_UART.c **** void DEBUG_UART_Enable(void) 
 175:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
 116              		.loc 1 175 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              	.LCFI4:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 82B0     		sub	sp, sp, #8
 126              	.LCFI5:
 127              		.cfi_def_cfa_offset 16
 128 0004 00AF     		add	r7, sp, #0
 129              	.LCFI6:
 130              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/DEBUG_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 131              		.loc 1 177 0
 132 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 133 000a 0346     		mov	r3, r0
 134 000c FB71     		strb	r3, [r7, #7]
 178:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 179:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED)
 180:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXBITCTR_CONTROL_REG |= DEBUG_UART_CNTR_ENABLE;
 182:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXSTATUS_ACTL_REG  |= DEBUG_UART_INT_ENABLE;
 184:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RX_INTERRUPT_ENABLED && (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 185:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntEnable(DEBUG_UART_RX_VECT_NUM);
 186:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if (DEBUG_UART_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED*/
 191:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 192:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_TX_ENABLED)
 193:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(!DEBUG_UART_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXBITCTR_CONTROL_REG |= DEBUG_UART_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_TXSTATUS_ACTL_REG |= DEBUG_UART_INT_ENABLE;
 135              		.loc 1 198 0
 136 000e 46F29853 		movw	r3, #26008
 137 0012 C4F20003 		movt	r3, 16384
 138 0016 46F29852 		movw	r2, #26008
 139 001a C4F20002 		movt	r2, 16384
 140 001e 1278     		ldrb	r2, [r2, #0]
 141 0020 D2B2     		uxtb	r2, r2
 142 0022 42F01002 		orr	r2, r2, #16
 143 0026 D2B2     		uxtb	r2, r2
 144 0028 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 7


 199:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TX_INTERRUPT_ENABLED && (DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 200:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntEnable(DEBUG_UART_TX_VECT_NUM);
 201:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/DEBUG_UART.c ****      #endif /* End DEBUG_UART_TX_ENABLED */
 203:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 204:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_IntClock_Start();
 145              		.loc 1 206 0
 146 002a FFF7FEFF 		bl	DEBUG_UART_IntClock_Start
 207:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 209:.\Generated_Source\PSoC5/DEBUG_UART.c ****     CyExitCriticalSection(enableInterrupts);
 147              		.loc 1 209 0
 148 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 149 0030 1846     		mov	r0, r3
 150 0032 FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
 151              		.loc 1 210 0
 152 0036 07F10807 		add	r7, r7, #8
 153 003a BD46     		mov	sp, r7
 154 003c 80BD     		pop	{r7, pc}
 155              		.cfi_endproc
 156              	.LFE2:
 157              		.size	DEBUG_UART_Enable, .-DEBUG_UART_Enable
 158 003e 00BF     		.section	.text.DEBUG_UART_Stop,"ax",%progbits
 159              		.align	2
 160              		.global	DEBUG_UART_Stop
 161              		.thumb
 162              		.thumb_func
 163              		.type	DEBUG_UART_Stop, %function
 164              	DEBUG_UART_Stop:
 165              	.LFB3:
 211:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 212:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 213:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_Stop
 215:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 217:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
 218:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 220:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
 221:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 222:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 223:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
 224:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 225:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 226:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/DEBUG_UART.c **** void DEBUG_UART_Stop(void) 
 228:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
 166              		.loc 1 228 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 8
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI7:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 8


 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              	.LCFI8:
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI9:
 180              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/DEBUG_UART.c ****     enableInterrupts = CyEnterCriticalSection();
 181              		.loc 1 230 0
 182 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 183 000a 0346     		mov	r3, r0
 184 000c FB71     		strb	r3, [r7, #7]
 231:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 232:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED)
 234:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXBITCTR_CONTROL_REG &= (uint8)~DEBUG_UART_CNTR_ENABLE;
 235:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_RX_ENABLED */
 236:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 237:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_TX_ENABLED)
 238:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(!DEBUG_UART_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_TXBITCTR_CONTROL_REG &= (uint8)~DEBUG_UART_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* DEBUG_UART_TX_ENABLED */
 242:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 243:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_IntClock_Stop();
 185              		.loc 1 245 0
 186 000e FFF7FEFF 		bl	DEBUG_UART_IntClock_Stop
 246:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 248:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED)
 250:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXSTATUS_ACTL_REG  &= (uint8)~DEBUG_UART_INT_ENABLE;
 251:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RX_INTERRUPT_ENABLED && (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 252:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_DisableRxInt();
 253:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_RX_ENABLED */
 255:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 256:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_TX_ENABLED)
 257:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_TXSTATUS_ACTL_REG &= (uint8)~DEBUG_UART_INT_ENABLE;
 187              		.loc 1 257 0
 188 0012 46F29853 		movw	r3, #26008
 189 0016 C4F20003 		movt	r3, 16384
 190 001a 46F29852 		movw	r2, #26008
 191 001e C4F20002 		movt	r2, 16384
 192 0022 1278     		ldrb	r2, [r2, #0]
 193 0024 D2B2     		uxtb	r2, r2
 194 0026 22F01002 		bic	r2, r2, #16
 195 002a D2B2     		uxtb	r2, r2
 196 002c 1A70     		strb	r2, [r3, #0]
 258:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TX_INTERRUPT_ENABLED && (DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH))
 259:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_DisableTxInt();
 260:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 9


 261:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_TX_ENABLED */
 262:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 263:.\Generated_Source\PSoC5/DEBUG_UART.c ****     CyExitCriticalSection(enableInterrupts);
 197              		.loc 1 263 0
 198 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 199 0030 1846     		mov	r0, r3
 200 0032 FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
 201              		.loc 1 264 0
 202 0036 07F10807 		add	r7, r7, #8
 203 003a BD46     		mov	sp, r7
 204 003c 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE3:
 207              		.size	DEBUG_UART_Stop, .-DEBUG_UART_Stop
 208 003e 00BF     		.section	.text.DEBUG_UART_ReadControlRegister,"ax",%progbits
 209              		.align	2
 210              		.global	DEBUG_UART_ReadControlRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	DEBUG_UART_ReadControlRegister, %function
 214              	DEBUG_UART_ReadControlRegister:
 215              	.LFB4:
 265:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 266:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 267:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_ReadControlRegister
 269:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 271:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
 272:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 274:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
 275:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 276:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 277:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
 278:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 280:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/DEBUG_UART.c **** uint8 DEBUG_UART_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
 216              		.loc 1 282 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              	.LCFI10:
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 7, -4
 225 0002 00AF     		add	r7, sp, #0
 226              	.LCFI11:
 227              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if( DEBUG_UART_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(0u);
 228              		.loc 1 284 0
 229 0004 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 10


 285:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #else
 286:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(DEBUG_UART_CONTROL_REG);
 287:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
 230              		.loc 1 288 0
 231 0008 1846     		mov	r0, r3
 232 000a BD46     		mov	sp, r7
 233 000c 80BC     		pop	{r7}
 234 000e 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE4:
 237              		.size	DEBUG_UART_ReadControlRegister, .-DEBUG_UART_ReadControlRegister
 238              		.section	.text.DEBUG_UART_WriteControlRegister,"ax",%progbits
 239              		.align	2
 240              		.global	DEBUG_UART_WriteControlRegister
 241              		.thumb
 242              		.thumb_func
 243              		.type	DEBUG_UART_WriteControlRegister, %function
 244              	DEBUG_UART_WriteControlRegister:
 245              	.LFB5:
 289:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 290:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 291:.\Generated_Source\PSoC5/DEBUG_UART.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Function Name: DEBUG_UART_WriteControlRegister
 293:.\Generated_Source\PSoC5/DEBUG_UART.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 295:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Summary:
 296:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 298:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Parameters:
 299:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 301:.\Generated_Source\PSoC5/DEBUG_UART.c **** * Return:
 302:.\Generated_Source\PSoC5/DEBUG_UART.c **** *  None.
 303:.\Generated_Source\PSoC5/DEBUG_UART.c **** *
 304:.\Generated_Source\PSoC5/DEBUG_UART.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/DEBUG_UART.c **** void  DEBUG_UART_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/DEBUG_UART.c **** {
 246              		.loc 1 306 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              	.LCFI12:
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 7, -4
 255 0002 83B0     		sub	sp, sp, #12
 256              	.LCFI13:
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              	.LCFI14:
 260              		.cfi_def_cfa_register 7
 261 0006 0346     		mov	r3, r0
 262 0008 FB71     		strb	r3, [r7, #7]
 307:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if( DEBUG_UART_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(control != 0u) { }      /* release compiler warning */
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 11


 309:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #else
 310:.\Generated_Source\PSoC5/DEBUG_UART.c ****        DEBUG_UART_CONTROL_REG = control;
 311:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* End DEBUG_UART_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/DEBUG_UART.c **** }
 263              		.loc 1 312 0
 264 000a 07F10C07 		add	r7, r7, #12
 265 000e BD46     		mov	sp, r7
 266 0010 80BC     		pop	{r7}
 267 0012 7047     		bx	lr
 268              		.cfi_endproc
 269              	.LFE5:
 270              		.size	DEBUG_UART_WriteControlRegister, .-DEBUG_UART_WriteControlRegister
 271              		.section	.text.DEBUG_UART_SetTxInterruptMode,"ax",%progbits
 272              		.align	2
 273              		.global	DEBUG_UART_SetTxInterruptMode
 274              		.thumb
 275              		.thumb_func
 276              		.type	DEBUG_UART_SetTxInterruptMode, %function
 277              	DEBUG_UART_SetTxInterruptMode:
 278              	.LFB6:
 313:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 314:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 315:.\Generated_Source\PSoC5/DEBUG_UART.c **** #if(DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED)
 316:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 317:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 319:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Function Name: DEBUG_UART_EnableRxInt
 321:.\Generated_Source\PSoC5/DEBUG_UART.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 323:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Summary:
 324:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 326:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 328:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 329:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Return:
 330:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 331:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 332:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Theory:
 333:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 335:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/DEBUG_UART.c ****         void DEBUG_UART_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
 338:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntEnable(DEBUG_UART_RX_VECT_NUM);
 339:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
 340:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 341:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 342:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Function Name: DEBUG_UART_DisableRxInt
 344:.\Generated_Source\PSoC5/DEBUG_UART.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 346:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Summary:
 347:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 349:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Parameters:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 12


 350:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 351:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 352:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Return:
 353:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 354:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 355:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Theory:
 356:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 358:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/DEBUG_UART.c ****         void DEBUG_UART_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
 361:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntDisable(DEBUG_UART_RX_VECT_NUM);
 362:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
 363:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 364:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 366:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 367:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 371:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 372:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 374:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 378:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 379:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 380:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 381:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
 382:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 384:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 387:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXSTATUS_MASK_REG  = intSrc;
 388:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 389:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 390:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 391:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_ReadRxData
 393:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 395:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 396:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 399:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 401:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 402:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 403:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 405:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBuffer - RAM buffer pointer for save received data.
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 13


 407:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 414:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
 416:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 417:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 420:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 422:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/DEBUG_UART.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/DEBUG_UART.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableRxInt();
 429:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/DEBUG_UART.c ****             loc_rxBufferRead = DEBUG_UART_rxBufferRead;
 431:.\Generated_Source\PSoC5/DEBUG_UART.c ****             loc_rxBufferWrite = DEBUG_UART_rxBufferWrite;
 432:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 433:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if( (DEBUG_UART_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 435:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 rxData = DEBUG_UART_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 438:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(loc_rxBufferRead >= DEBUG_UART_RXBUFFERSIZE)
 439:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 440:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 442:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 445:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(DEBUG_UART_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 447:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if( (DEBUG_UART_RX_INTERRUPT_ENABLED) && (DEBUG_UART_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC5/DEBUG_UART.c ****                          (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #if( DEBUG_UART_HD_ENABLED )
 452:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             if((DEBUG_UART_CONTROL_REG & DEBUG_UART_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 */
 457:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 DEBUG_UART_RXSTATUS_MASK_REG  |= DEBUG_UART_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             }
 459:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #else
 460:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             DEBUG_UART_RXSTATUS_MASK_REG  |= DEBUG_UART_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #endif /* end DEBUG_UART_HD_ENABLED */
 462:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 14


 464:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 465:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else
 466:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 rxData = DEBUG_UART_RXDATA_REG;
 468:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 469:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 470:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableRxInt();
 473:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 475:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else /* DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 477:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/DEBUG_UART.c ****             rxData = DEBUG_UART_RXDATA_REG;
 479:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 480:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 482:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(rxData);
 483:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 484:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 485:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 486:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_ReadRxStatus
 488:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 490:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 491:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 494:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 496:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 497:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 498:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 500:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   DEBUG_UART_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   DEBUG_UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   bits.
 507:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 508:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 511:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 513:.\Generated_Source\PSoC5/DEBUG_UART.c ****         status = DEBUG_UART_RXSTATUS_REG & DEBUG_UART_RX_HW_MASK;
 514:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 515:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if( DEBUG_UART_rxBufferOverflow != 0u )
 517:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 518:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 status |= DEBUG_UART_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 15


 521:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* DEBUG_UART_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 523:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(status);
 524:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 525:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 526:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 527:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_GetChar
 529:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 531:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 532:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  returned.
 535:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 536:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 538:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 539:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 540:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 543:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 552:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 553:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
 554:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 555:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_GetChar(void) 
 557:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 558:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 rxData = 0u;
 559:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 561:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/DEBUG_UART.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/DEBUG_UART.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableRxInt();
 568:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/DEBUG_UART.c ****             loc_rxBufferRead = DEBUG_UART_rxBufferRead;
 570:.\Generated_Source\PSoC5/DEBUG_UART.c ****             loc_rxBufferWrite = DEBUG_UART_rxBufferWrite;
 571:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 572:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if( (DEBUG_UART_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 574:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 rxData = DEBUG_UART_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 loc_rxBufferRead++;
 576:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(loc_rxBufferRead >= DEBUG_UART_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 16


 578:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 580:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 583:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(DEBUG_UART_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 585:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if( (DEBUG_UART_RX_INTERRUPT_ENABLED) && (DEBUG_UART_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #if( DEBUG_UART_HD_ENABLED )
 589:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             if((DEBUG_UART_CONTROL_REG & DEBUG_UART_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 */
 594:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                 DEBUG_UART_RXSTATUS_MASK_REG  |= DEBUG_UART_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             }
 596:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #else
 597:.\Generated_Source\PSoC5/DEBUG_UART.c ****                             DEBUG_UART_RXSTATUS_MASK_REG  |= DEBUG_UART_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         #endif /* end DEBUG_UART_HD_ENABLED */
 599:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 601:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 602:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 603:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else
 604:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {   rxStatus = DEBUG_UART_RXSTATUS_REG;
 605:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if((rxStatus & DEBUG_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     rxData = DEBUG_UART_RXDATA_REG;
 608:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     if((rxStatus & (DEBUG_UART_RX_STS_BREAK | DEBUG_UART_RX_STS_PAR_ERROR |
 610:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                    DEBUG_UART_RX_STS_STOP_ERROR | DEBUG_UART_RX_STS_OVERRUN)) != 0u
 611:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
 612:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }
 614:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 615:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 616:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 617:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableRxInt();
 620:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 622:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else /* DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 624:.\Generated_Source\PSoC5/DEBUG_UART.c ****             rxStatus =DEBUG_UART_RXSTATUS_REG;
 625:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if((rxStatus & DEBUG_UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 626:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 rxData = DEBUG_UART_RXDATA_REG;
 628:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if((rxStatus & (DEBUG_UART_RX_STS_BREAK | DEBUG_UART_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                DEBUG_UART_RX_STS_STOP_ERROR | DEBUG_UART_RX_STS_OVERRUN)) != 0u)
 631:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 632:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     rxData = 0u;
 633:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 634:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 17


 635:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 637:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(rxData);
 638:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 639:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 640:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 641:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_GetByte
 643:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 645:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 646:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 648:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 650:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 651:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 652:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 654:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
 656:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 657:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint16 DEBUG_UART_GetByte(void) 
 659:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 660:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return ( ((uint16)DEBUG_UART_ReadRxStatus() << 8u) | DEBUG_UART_ReadRxData() );
 661:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 662:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 663:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 664:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_GetRxBufferSize
 666:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 668:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 669:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  bytes
 671:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 672:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 674:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 675:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 676:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 679:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 684:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 685:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
 686:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 687:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
 688:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 690:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_GetRxBufferSize(void)
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 18


 692:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                             
 693:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 694:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 size;
 695:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 696:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 698:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableRxInt();
 702:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* DEBUG_UART_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 704:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if(DEBUG_UART_rxBufferRead == DEBUG_UART_rxBufferWrite)
 705:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 706:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(DEBUG_UART_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 708:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     size = DEBUG_UART_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 710:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 else
 711:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
 712:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     size = 0u;
 713:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
 714:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 715:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else if(DEBUG_UART_rxBufferRead < DEBUG_UART_rxBufferWrite)
 716:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 717:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = (DEBUG_UART_rxBufferWrite - DEBUG_UART_rxBufferRead);
 718:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 719:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else
 720:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
 721:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = (DEBUG_UART_RXBUFFERSIZE - DEBUG_UART_rxBufferRead) + DEBUG_UART_rxBufferWri
 722:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
 723:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 724:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableRxInt();
 727:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 729:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else /* DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 731:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC5/DEBUG_UART.c ****             size = ((DEBUG_UART_RXSTATUS_REG & DEBUG_UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 733:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 734:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 736:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(size);
 737:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 738:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 739:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 740:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_ClearRxBuffer
 742:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 744:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 745:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 748:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 19


 749:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 750:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 751:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 752:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 753:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 754:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 760:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
 762:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 763:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
 764:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 768:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 773:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 775:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/DEBUG_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 778:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXDATA_AUX_CTL_REG |=  DEBUG_UART_RX_FIFO_CLR;
 779:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXDATA_AUX_CTL_REG &= (uint8)~DEBUG_UART_RX_FIFO_CLR;
 780:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC5/DEBUG_UART.c ****         CyExitCriticalSection(enableInterrupts);
 782:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 783:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableRxInt();
 788:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 790:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 795:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableRxInt();
 798:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 801:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 802:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 803:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 804:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetRxAddressMode
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 20


 806:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 808:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 809:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 811:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 823:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 824:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 825:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 826:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 831:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                         
 834:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 835:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #else /* DEBUG_UART_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 tmpCtrl = DEBUG_UART_CONTROL_REG & (uint8)~DEBUG_UART_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 tmpCtrl |= (uint8)(addressMode << DEBUG_UART_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #if(DEBUG_UART_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/DEBUG_UART.c ****                    (DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #endif /* End DEBUG_UART_RXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else /* DEBUG_UART_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 853:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 854:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 855:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetRxAddress1
 857:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 859:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 860:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 862:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 21


 863:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  address
 864:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 865:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 866:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 867:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 868:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 871:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 872:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXADDRESS1_REG = address;
 873:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 874:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 875:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 876:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetRxAddress2
 878:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 880:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 881:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 883:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  address
 885:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 886:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 887:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 888:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 889:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 892:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_RXADDRESS2_REG = address;
 893:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 894:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 895:.\Generated_Source\PSoC5/DEBUG_UART.c **** #endif  /* DEBUG_UART_RX_ENABLED || DEBUG_UART_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 897:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 898:.\Generated_Source\PSoC5/DEBUG_UART.c **** #if( (DEBUG_UART_TX_ENABLED) || (DEBUG_UART_HD_ENABLED) )
 899:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 900:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 902:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Function Name: DEBUG_UART_EnableTxInt
 904:.\Generated_Source\PSoC5/DEBUG_UART.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 906:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Summary:
 907:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 909:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 911:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 912:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Return:
 913:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 914:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 915:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Theory:
 916:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 918:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC5/DEBUG_UART.c ****         void DEBUG_UART_EnableTxInt(void) 
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 22


 920:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
 921:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntEnable(DEBUG_UART_TX_VECT_NUM);
 922:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
 923:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 924:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 925:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Function Name: DEBUG_UART_DisableTxInt
 927:.\Generated_Source\PSoC5/DEBUG_UART.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 929:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Summary:
 930:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 932:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 934:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 935:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Return:
 936:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  None.
 937:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 938:.\Generated_Source\PSoC5/DEBUG_UART.c ****         * Theory:
 939:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *
 941:.\Generated_Source\PSoC5/DEBUG_UART.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/DEBUG_UART.c ****         void DEBUG_UART_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
 944:.\Generated_Source\PSoC5/DEBUG_UART.c ****             CyIntDisable(DEBUG_UART_TX_VECT_NUM);
 945:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
 946:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 947:.\Generated_Source\PSoC5/DEBUG_UART.c ****     #endif /* DEBUG_UART_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 949:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 950:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 954:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 955:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 957:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 961:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 962:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
 963:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 964:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
 965:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 967:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 279              		.loc 1 969 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 8
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              	.LCFI15:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 23


 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 83B0     		sub	sp, sp, #12
 289              	.LCFI16:
 290              		.cfi_def_cfa_offset 16
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI17:
 293              		.cfi_def_cfa_register 7
 294 0006 0346     		mov	r3, r0
 295 0008 FB71     		strb	r3, [r7, #7]
 970:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_TXSTATUS_MASK_REG = intSrc;
 296              		.loc 1 970 0
 297 000a 46F28853 		movw	r3, #25992
 298 000e C4F20003 		movt	r3, 16384
 299 0012 FA79     		ldrb	r2, [r7, #7]
 300 0014 1A70     		strb	r2, [r3, #0]
 971:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 301              		.loc 1 971 0
 302 0016 07F10C07 		add	r7, r7, #12
 303 001a BD46     		mov	sp, r7
 304 001c 80BC     		pop	{r7}
 305 001e 7047     		bx	lr
 306              		.cfi_endproc
 307              	.LFE6:
 308              		.size	DEBUG_UART_SetTxInterruptMode, .-DEBUG_UART_SetTxInterruptMode
 309              		.section	.text.DEBUG_UART_WriteTxData,"ax",%progbits
 310              		.align	2
 311              		.global	DEBUG_UART_WriteTxData
 312              		.thumb
 313              		.thumb_func
 314              		.type	DEBUG_UART_WriteTxData, %function
 315              	DEBUG_UART_WriteTxData:
 316              	.LFB7:
 972:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 973:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
 974:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_WriteTxData
 976:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 978:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
 979:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 983:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 986:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
 987:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * void
 988:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 989:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 24


 996:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
 998:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1000:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1001:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 317              		.loc 1 1003 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 8
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              	.LCFI18:
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 0002 83B0     		sub	sp, sp, #12
 327              	.LCFI19:
 328              		.cfi_def_cfa_offset 16
 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI20:
 331              		.cfi_def_cfa_register 7
 332 0006 0346     		mov	r3, r0
 333 0008 FB71     		strb	r3, [r7, #7]
1004:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(DEBUG_UART_initVar != 0u)
 334              		.loc 1 1005 0
 335 000a 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
 336 000e C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
 337 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 338 0014 002B     		cmp	r3, #0
 339 0016 05D0     		beq	.L10
1006:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1007:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1009:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_DisableTxInt();
1013:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1015:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (DEBUG_UART_txBufferRead == DEBUG_UART_txBufferWrite) &&
1016:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     ((DEBUG_UART_TXSTATUS_REG & DEBUG_UART_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1018:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1021:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 else
1022:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1023:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     if(DEBUG_UART_txBufferWrite >= DEBUG_UART_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1025:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }
1027:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1028:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_txBuffer[DEBUG_UART_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 25


1030:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_txBufferWrite++;
1032:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1033:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1034:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1035:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_EnableTxInt();
1038:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1040:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #else /* DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1042:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_TXDATA_REG = txDataByte;
 340              		.loc 1 1043 0
 341 0018 46F24853 		movw	r3, #25928
 342 001c C4F20003 		movt	r3, 16384
 343 0020 FA79     		ldrb	r2, [r7, #7]
 344 0022 1A70     		strb	r2, [r3, #0]
 345              	.L10:
1044:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1045:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1046:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1047:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 346              		.loc 1 1047 0
 347 0024 07F10C07 		add	r7, r7, #12
 348 0028 BD46     		mov	sp, r7
 349 002a 80BC     		pop	{r7}
 350 002c 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE7:
 353              		.size	DEBUG_UART_WriteTxData, .-DEBUG_UART_WriteTxData
 354 002e 00BF     		.section	.text.DEBUG_UART_ReadTxStatus,"ax",%progbits
 355              		.align	2
 356              		.global	DEBUG_UART_ReadTxStatus
 357              		.thumb
 358              		.thumb_func
 359              		.type	DEBUG_UART_ReadTxStatus, %function
 360              	DEBUG_UART_ReadTxStatus:
 361              	.LFB8:
1048:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1049:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1050:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_ReadTxStatus
1052:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1054:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1055:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1057:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1059:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1060:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1061:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1063:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1064:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  This function reads the status register which is clear on read. It is up to
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 26


1065:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1069:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 362              		.loc 1 1071 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              	.LCFI21:
 369              		.cfi_def_cfa_offset 4
 370              		.cfi_offset 7, -4
 371 0002 00AF     		add	r7, sp, #0
 372              	.LCFI22:
 373              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(DEBUG_UART_TXSTATUS_REG);
 374              		.loc 1 1072 0
 375 0004 46F26853 		movw	r3, #25960
 376 0008 C4F20003 		movt	r3, 16384
 377 000c 1B78     		ldrb	r3, [r3, #0]
 378 000e DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 379              		.loc 1 1073 0
 380 0010 1846     		mov	r0, r3
 381 0012 BD46     		mov	sp, r7
 382 0014 80BC     		pop	{r7}
 383 0016 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	DEBUG_UART_ReadTxStatus, .-DEBUG_UART_ReadTxStatus
 387              		.section	.text.DEBUG_UART_PutChar,"ax",%progbits
 388              		.align	2
 389              		.global	DEBUG_UART_PutChar
 390              		.thumb
 391              		.thumb_func
 392              		.type	DEBUG_UART_PutChar, %function
 393              	DEBUG_UART_PutChar:
 394              	.LFB9:
1074:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1075:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1076:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_PutChar
1078:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1080:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1081:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1083:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1086:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1087:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1088:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 27


1089:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1099:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1101:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1102:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1103:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1105:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 395              		.loc 1 1107 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 8
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI23:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 83B0     		sub	sp, sp, #12
 405              	.LCFI24:
 406              		.cfi_def_cfa_offset 16
 407 0004 00AF     		add	r7, sp, #0
 408              	.LCFI25:
 409              		.cfi_def_cfa_register 7
 410 0006 0346     		mov	r3, r0
 411 0008 FB71     		strb	r3, [r7, #7]
1108:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 */
1113:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1116:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 do{
1117:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if ((DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         CyIntDisable(DEBUG_UART_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     loc_txBufferWrite = DEBUG_UART_txBufferWrite;
1123:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     loc_txBufferRead = DEBUG_UART_txBufferRead;
1124:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if ((DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         CyIntEnable(DEBUG_UART_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 28


1129:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                         (uint8)(DEBUG_UART_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1132:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     ((DEBUG_UART_TXSTATUS_REG & DEBUG_UART_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1135:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1138:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 else
1139:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1140:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     if(loc_txBufferWrite >= DEBUG_UART_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1142:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }
1144:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1148:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if ((DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         CyIntDisable(DEBUG_UART_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if ((DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         CyIntEnable(DEBUG_UART_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1157:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1158:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #else /* DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1160:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 while((DEBUG_UART_TXSTATUS_REG & DEBUG_UART_TX_STS_FIFO_FULL) != 0u)
 412              		.loc 1 1160 0
 413 000a 00BF     		nop
 414              	.L15:
 415              		.loc 1 1160 0 is_stmt 0 discriminator 1
 416 000c 46F26853 		movw	r3, #25960
 417 0010 C4F20003 		movt	r3, 16384
 418 0014 1B78     		ldrb	r3, [r3, #0]
 419 0016 DBB2     		uxtb	r3, r3
 420 0018 03F00403 		and	r3, r3, #4
 421 001c 002B     		cmp	r3, #0
 422 001e F5D1     		bne	.L15
1161:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1162:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1164:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1165:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_TXDATA_REG = txDataByte;
 423              		.loc 1 1166 0 is_stmt 1
 424 0020 46F24853 		movw	r3, #25928
 425 0024 C4F20003 		movt	r3, 16384
 426 0028 FA79     		ldrb	r2, [r7, #7]
 427 002a 1A70     		strb	r2, [r3, #0]
1167:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1168:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1169:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 29


 428              		.loc 1 1169 0
 429 002c 07F10C07 		add	r7, r7, #12
 430 0030 BD46     		mov	sp, r7
 431 0032 80BC     		pop	{r7}
 432 0034 7047     		bx	lr
 433              		.cfi_endproc
 434              	.LFE9:
 435              		.size	DEBUG_UART_PutChar, .-DEBUG_UART_PutChar
 436 0036 00BF     		.section	.text.DEBUG_UART_PutString,"ax",%progbits
 437              		.align	2
 438              		.global	DEBUG_UART_PutString
 439              		.thumb
 440              		.thumb_func
 441              		.type	DEBUG_UART_PutString, %function
 442              	DEBUG_UART_PutString:
 443              	.LFB10:
1170:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1171:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1172:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_PutString
1174:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1176:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1177:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1179:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1182:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1183:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1184:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1185:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1189:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1191:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1192:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1193:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1197:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 444              		.loc 1 1199 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 16
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              	.LCFI26:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 7, -8
 452              		.cfi_offset 14, -4
 453 0002 84B0     		sub	sp, sp, #16
 454              	.LCFI27:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 30


 455              		.cfi_def_cfa_offset 24
 456 0004 00AF     		add	r7, sp, #0
 457              	.LCFI28:
 458              		.cfi_def_cfa_register 7
 459 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint16 buf_index = 0u;
 460              		.loc 1 1200 0
 461 0008 4FF00003 		mov	r3, #0
 462 000c FB81     		strh	r3, [r7, #14]	@ movhi
1201:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(DEBUG_UART_initVar != 0u)
 463              		.loc 1 1202 0
 464 000e 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
 465 0012 C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
 466 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 467 0018 002B     		cmp	r3, #0
 468 001a 11D0     		beq	.L16
1203:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1204:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/DEBUG_UART.c ****             while(string[buf_index] != (char8)0)
 469              		.loc 1 1205 0
 470 001c 0AE0     		b	.L18
 471              	.L19:
1206:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1207:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_PutChar((uint8)string[buf_index]);
 472              		.loc 1 1207 0
 473 001e FB89     		ldrh	r3, [r7, #14]
 474 0020 7A68     		ldr	r2, [r7, #4]
 475 0022 D318     		adds	r3, r2, r3
 476 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 477 0026 1846     		mov	r0, r3
 478 0028 FFF7FEFF 		bl	DEBUG_UART_PutChar
1208:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 buf_index++;
 479              		.loc 1 1208 0
 480 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 481 002e 03F10103 		add	r3, r3, #1
 482 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 483              	.L18:
1205:.\Generated_Source\PSoC5/DEBUG_UART.c ****             while(string[buf_index] != (char8)0)
 484              		.loc 1 1205 0 discriminator 1
 485 0034 FB89     		ldrh	r3, [r7, #14]
 486 0036 7A68     		ldr	r2, [r7, #4]
 487 0038 D318     		adds	r3, r2, r3
 488 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 489 003c 002B     		cmp	r3, #0
 490 003e EED1     		bne	.L19
 491              	.L16:
1209:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1210:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1211:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 492              		.loc 1 1211 0
 493 0040 07F11007 		add	r7, r7, #16
 494 0044 BD46     		mov	sp, r7
 495 0046 80BD     		pop	{r7, pc}
 496              		.cfi_endproc
 497              	.LFE10:
 498              		.size	DEBUG_UART_PutString, .-DEBUG_UART_PutString
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 31


 499              		.section	.text.DEBUG_UART_PutArray,"ax",%progbits
 500              		.align	2
 501              		.global	DEBUG_UART_PutArray
 502              		.thumb
 503              		.thumb_func
 504              		.type	DEBUG_UART_PutArray, %function
 505              	DEBUG_UART_PutArray:
 506              	.LFB11:
1212:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1213:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1214:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_PutArray
1216:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1218:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1219:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1221:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1225:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1226:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1227:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1228:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1232:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1234:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1235:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                                     
1238:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 507              		.loc 1 1238 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 16
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              	.LCFI29:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 84B0     		sub	sp, sp, #16
 517              	.LCFI30:
 518              		.cfi_def_cfa_offset 24
 519 0004 00AF     		add	r7, sp, #0
 520              	.LCFI31:
 521              		.cfi_def_cfa_register 7
 522 0006 7860     		str	r0, [r7, #4]
 523 0008 0B46     		mov	r3, r1
 524 000a FB70     		strb	r3, [r7, #3]
1239:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 buf_index = 0u;
 525              		.loc 1 1239 0
 526 000c 4FF00003 		mov	r3, #0
 527 0010 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 32


1240:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(DEBUG_UART_initVar != 0u)
 528              		.loc 1 1241 0
 529 0012 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
 530 0016 C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
 531 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 532 001c 002B     		cmp	r3, #0
 533 001e 0ED0     		beq	.L20
 534              	.L22:
1242:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1243:.\Generated_Source\PSoC5/DEBUG_UART.c ****             do
1244:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1245:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_PutChar(string[buf_index]);
 535              		.loc 1 1245 0 discriminator 1
 536 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 537 0022 7A68     		ldr	r2, [r7, #4]
 538 0024 D318     		adds	r3, r2, r3
 539 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 540 0028 1846     		mov	r0, r3
 541 002a FFF7FEFF 		bl	DEBUG_UART_PutChar
1246:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 buf_index++;
 542              		.loc 1 1246 0 discriminator 1
 543 002e FB7B     		ldrb	r3, [r7, #15]
 544 0030 03F10103 		add	r3, r3, #1
 545 0034 FB73     		strb	r3, [r7, #15]
1247:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }while(buf_index < byteCount);
 546              		.loc 1 1247 0 discriminator 1
 547 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 548 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 549 003a 9A42     		cmp	r2, r3
 550 003c F0D3     		bcc	.L22
 551              	.L20:
1248:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1249:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 552              		.loc 1 1249 0
 553 003e 07F11007 		add	r7, r7, #16
 554 0042 BD46     		mov	sp, r7
 555 0044 80BD     		pop	{r7, pc}
 556              		.cfi_endproc
 557              	.LFE11:
 558              		.size	DEBUG_UART_PutArray, .-DEBUG_UART_PutArray
 559 0046 00BF     		.section	.text.DEBUG_UART_PutCRLF,"ax",%progbits
 560              		.align	2
 561              		.global	DEBUG_UART_PutCRLF
 562              		.thumb
 563              		.thumb_func
 564              		.type	DEBUG_UART_PutCRLF, %function
 565              	DEBUG_UART_PutCRLF:
 566              	.LFB12:
1250:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1251:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1252:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_PutCRLF
1254:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1256:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1257:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Write a character and then carriage return and line feed.
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 33


1258:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1259:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1262:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1263:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1264:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1265:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1269:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1271:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1272:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 567              		.loc 1 1274 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 8
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 571 0000 80B5     		push	{r7, lr}
 572              	.LCFI32:
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 82B0     		sub	sp, sp, #8
 577              	.LCFI33:
 578              		.cfi_def_cfa_offset 16
 579 0004 00AF     		add	r7, sp, #0
 580              	.LCFI34:
 581              		.cfi_def_cfa_register 7
 582 0006 0346     		mov	r3, r0
 583 0008 FB71     		strb	r3, [r7, #7]
1275:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(DEBUG_UART_initVar != 0u)
 584              		.loc 1 1276 0
 585 000a 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
 586 000e C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
 587 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 588 0014 002B     		cmp	r3, #0
 589 0016 0BD0     		beq	.L23
1277:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1278:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_PutChar(txDataByte);
 590              		.loc 1 1278 0
 591 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 592 001a 1846     		mov	r0, r3
 593 001c FFF7FEFF 		bl	DEBUG_UART_PutChar
1279:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_PutChar(0x0Du);
 594              		.loc 1 1279 0
 595 0020 4FF00D00 		mov	r0, #13
 596 0024 FFF7FEFF 		bl	DEBUG_UART_PutChar
1280:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_PutChar(0x0Au);
 597              		.loc 1 1280 0
 598 0028 4FF00A00 		mov	r0, #10
 599 002c FFF7FEFF 		bl	DEBUG_UART_PutChar
 600              	.L23:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 34


1281:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1282:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 601              		.loc 1 1282 0
 602 0030 07F10807 		add	r7, r7, #8
 603 0034 BD46     		mov	sp, r7
 604 0036 80BD     		pop	{r7, pc}
 605              		.cfi_endproc
 606              	.LFE12:
 607              		.size	DEBUG_UART_PutCRLF, .-DEBUG_UART_PutCRLF
 608              		.section	.text.DEBUG_UART_GetTxBufferSize,"ax",%progbits
 609              		.align	2
 610              		.global	DEBUG_UART_GetTxBufferSize
 611              		.thumb
 612              		.thumb_func
 613              		.type	DEBUG_UART_GetTxBufferSize, %function
 614              	DEBUG_UART_GetTxBufferSize:
 615              	.LFB13:
1283:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1284:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1285:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_GetTxBufferSize
1287:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1289:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1290:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  bytes
1292:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1293:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1295:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1296:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1297:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1299:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1303:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1305:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1306:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1307:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1309:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/DEBUG_UART.c ****     uint8 DEBUG_UART_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                             
1312:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 616              		.loc 1 1312 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI35:
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 7, -4
 625 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 35


 626              	.LCFI36:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              	.LCFI37:
 630              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1315:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1317:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableTxInt();
1321:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1323:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if(DEBUG_UART_txBufferRead == DEBUG_UART_txBufferWrite)
1324:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1325:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = 0u;
1326:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1327:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else if(DEBUG_UART_txBufferRead < DEBUG_UART_txBufferWrite)
1328:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1329:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = (DEBUG_UART_txBufferWrite - DEBUG_UART_txBufferRead);
1330:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1331:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else
1332:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1333:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = (DEBUG_UART_TXBUFFERSIZE - DEBUG_UART_txBufferRead) + DEBUG_UART_txBufferWri
1334:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1335:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1336:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableTxInt();
1339:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1341:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #else /* DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1342:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1343:.\Generated_Source\PSoC5/DEBUG_UART.c ****             size = DEBUG_UART_TXSTATUS_REG;
 631              		.loc 1 1343 0
 632 0006 46F26853 		movw	r3, #25960
 633 000a C4F20003 		movt	r3, 16384
 634 000e 1B78     		ldrb	r3, [r3, #0]
 635 0010 FB71     		strb	r3, [r7, #7]
1344:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1345:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/DEBUG_UART.c ****             if((size & DEBUG_UART_TX_STS_FIFO_FULL) != 0u)
 636              		.loc 1 1346 0
 637 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638 0014 03F00403 		and	r3, r3, #4
 639 0018 002B     		cmp	r3, #0
 640 001a 03D0     		beq	.L26
1347:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1348:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = DEBUG_UART_FIFO_LENGTH;
 641              		.loc 1 1348 0
 642 001c 4FF00403 		mov	r3, #4
 643 0020 FB71     		strb	r3, [r7, #7]
 644 0022 0BE0     		b	.L27
 645              	.L26:
1349:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 36


1350:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else if((size & DEBUG_UART_TX_STS_FIFO_EMPTY) != 0u)
 646              		.loc 1 1350 0
 647 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 648 0026 03F00203 		and	r3, r3, #2
 649 002a 002B     		cmp	r3, #0
 650 002c 03D0     		beq	.L28
1351:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1352:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = 0u;
 651              		.loc 1 1352 0
 652 002e 4FF00003 		mov	r3, #0
 653 0032 FB71     		strb	r3, [r7, #7]
 654 0034 02E0     		b	.L27
 655              	.L28:
1353:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1354:.\Generated_Source\PSoC5/DEBUG_UART.c ****             else
1355:.\Generated_Source\PSoC5/DEBUG_UART.c ****             {
1356:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 size = 1u;
 656              		.loc 1 1357 0
 657 0036 4FF00103 		mov	r3, #1
 658 003a FB71     		strb	r3, [r7, #7]
 659              	.L27:
1358:.\Generated_Source\PSoC5/DEBUG_UART.c ****             }
1359:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1360:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1362:.\Generated_Source\PSoC5/DEBUG_UART.c ****         return(size);
 660              		.loc 1 1362 0
 661 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1363:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 662              		.loc 1 1363 0
 663 003e 1846     		mov	r0, r3
 664 0040 07F10C07 		add	r7, r7, #12
 665 0044 BD46     		mov	sp, r7
 666 0046 80BC     		pop	{r7}
 667 0048 7047     		bx	lr
 668              		.cfi_endproc
 669              	.LFE13:
 670              		.size	DEBUG_UART_GetTxBufferSize, .-DEBUG_UART_GetTxBufferSize
 671 004a 00BF     		.section	.text.DEBUG_UART_ClearTxBuffer,"ax",%progbits
 672              		.align	2
 673              		.global	DEBUG_UART_ClearTxBuffer
 674              		.thumb
 675              		.thumb_func
 676              		.type	DEBUG_UART_ClearTxBuffer, %function
 677              	DEBUG_UART_ClearTxBuffer:
 678              	.LFB14:
1364:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1365:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1366:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_ClearTxBuffer
1368:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1370:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1371:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 37


1374:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1376:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1377:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1378:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1379:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1380:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1384:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1386:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1387:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1388:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1392:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1395:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 679              		.loc 1 1397 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              	.LCFI38:
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 82B0     		sub	sp, sp, #8
 689              	.LCFI39:
 690              		.cfi_def_cfa_offset 16
 691 0004 00AF     		add	r7, sp, #0
 692              	.LCFI40:
 693              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC5/DEBUG_UART.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1400:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/DEBUG_UART.c ****         enableInterrupts = CyEnterCriticalSection();
 694              		.loc 1 1401 0
 695 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 696 000a 0346     		mov	r3, r0
 697 000c FB71     		strb	r3, [r7, #7]
1402:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_TXDATA_AUX_CTL_REG |=  DEBUG_UART_TX_FIFO_CLR;
 698              		.loc 1 1403 0
 699 000e 46F29853 		movw	r3, #26008
 700 0012 C4F20003 		movt	r3, 16384
 701 0016 46F29852 		movw	r2, #26008
 702 001a C4F20002 		movt	r2, 16384
 703 001e 1278     		ldrb	r2, [r2, #0]
 704 0020 D2B2     		uxtb	r2, r2
 705 0022 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 38


 706 0026 D2B2     		uxtb	r2, r2
 707 0028 1A70     		strb	r2, [r3, #0]
1404:.\Generated_Source\PSoC5/DEBUG_UART.c ****         DEBUG_UART_TXDATA_AUX_CTL_REG &= (uint8)~DEBUG_UART_TX_FIFO_CLR;
 708              		.loc 1 1404 0
 709 002a 46F29853 		movw	r3, #26008
 710 002e C4F20003 		movt	r3, 16384
 711 0032 46F29852 		movw	r2, #26008
 712 0036 C4F20002 		movt	r2, 16384
 713 003a 1278     		ldrb	r2, [r2, #0]
 714 003c D2B2     		uxtb	r2, r2
 715 003e 22F00102 		bic	r2, r2, #1
 716 0042 D2B2     		uxtb	r2, r2
 717 0044 1A70     		strb	r2, [r3, #0]
1405:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/DEBUG_UART.c ****         CyExitCriticalSection(enableInterrupts);
 718              		.loc 1 1406 0
 719 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 720 0048 1846     		mov	r0, r3
 721 004a FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1408:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #if(DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1410:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_DisableTxInt();
1414:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1416:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_txBufferRead = 0u;
1417:.\Generated_Source\PSoC5/DEBUG_UART.c ****             DEBUG_UART_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1419:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_EnableTxInt();
1422:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1424:.\Generated_Source\PSoC5/DEBUG_UART.c ****         #endif /* End DEBUG_UART_TXBUFFERSIZE > DEBUG_UART_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 722              		.loc 1 1425 0
 723 004e 07F10807 		add	r7, r7, #8
 724 0052 BD46     		mov	sp, r7
 725 0054 80BD     		pop	{r7, pc}
 726              		.cfi_endproc
 727              	.LFE14:
 728              		.size	DEBUG_UART_ClearTxBuffer, .-DEBUG_UART_ClearTxBuffer
 729 0056 00BF     		.section	.text.DEBUG_UART_SendBreak,"ax",%progbits
 730              		.align	2
 731              		.global	DEBUG_UART_SendBreak
 732              		.thumb
 733              		.thumb_func
 734              		.type	DEBUG_UART_SendBreak, %function
 735              	DEBUG_UART_SendBreak:
 736              	.LFB15:
1426:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1427:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1428:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SendBreak
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 39


1430:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1432:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1433:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1435:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1447:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1448:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1449:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1450:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  DEBUG_UART_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1455:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  No.
1457:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1458:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Theory:
1459:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  operation.
1462:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     complete.
1466:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     operation
1468:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1481:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1484:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 40


 737              		.loc 1 1486 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 16
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              	.LCFI41:
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 0002 85B0     		sub	sp, sp, #20
 747              	.LCFI42:
 748              		.cfi_def_cfa_offset 24
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI43:
 751              		.cfi_def_cfa_register 7
 752 0006 0346     		mov	r3, r0
 753 0008 FB71     		strb	r3, [r7, #7]
1487:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1488:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(DEBUG_UART_initVar != 0u)
 754              		.loc 1 1489 0
 755 000a 40F20003 		movw	r3, #:lower16:DEBUG_UART_initVar
 756 000e C0F20003 		movt	r3, #:upper16:DEBUG_UART_initVar
 757 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 758 0014 002B     		cmp	r3, #0
 759 0016 50D0     		beq	.L31
 760              	.LBB2:
1490:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1491:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/DEBUG_UART.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC5/DEBUG_UART.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1495:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if(DEBUG_UART_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1497:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_SEND_BREAK) ||
1498:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1500:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() |
1502:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                           DEBUG_UART_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1506:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1508:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tmpStat = DEBUG_UART_TXSTATUS_REG;
1509:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }while((tmpStat & DEBUG_UART_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1511:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1512:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1515:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1517:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tmpStat = DEBUG_UART_TXSTATUS_REG;
1518:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }while(((uint8)~tmpStat & DEBUG_UART_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 41


1520:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1521:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_REINIT) ||
1523:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1525:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() &
1526:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                   (uint8)~DEBUG_UART_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1528:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1529:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #else /* DEBUG_UART_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1531:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1533:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_SEND_BREAK) ||
 761              		.loc 1 1533 0
 762 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 763 001a 002B     		cmp	r3, #0
 764 001c 02D0     		beq	.L33
 765              		.loc 1 1533 0 is_stmt 0 discriminator 1
 766 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 767 0020 032B     		cmp	r3, #3
 768 0022 23D1     		bne	.L34
 769              	.L33:
1534:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1536:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if( (DEBUG_UART_PARITY_TYPE != DEBUG_UART__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                         (DEBUG_UART_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                               DEBUG_UART_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End DEBUG_UART_PARITY_TYPE != DEBUG_UART__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1543:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if(DEBUG_UART_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tx_period = DEBUG_UART_TXBITCLKTX_COMPLETE_REG;
 770              		.loc 1 1544 0 is_stmt 1
 771 0024 46F23443 		movw	r3, #25652
 772 0028 C4F20003 		movt	r3, 16384
 773 002c 1B78     		ldrb	r3, [r3, #0]
 774 002e DAB2     		uxtb	r2, r3
 775 0030 40F20003 		movw	r3, #:lower16:tx_period.4861
 776 0034 C0F20003 		movt	r3, #:upper16:tx_period.4861
 777 0038 1A70     		strb	r2, [r3, #0]
1545:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_TXBITCLKTX_COMPLETE_REG = DEBUG_UART_TXBITCTR_BREAKBITS;
 778              		.loc 1 1545 0
 779 003a 46F23443 		movw	r3, #25652
 780 003e C4F20003 		movt	r3, 16384
 781 0042 4FF06702 		mov	r2, #103
 782 0046 1A70     		strb	r2, [r3, #0]
1546:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #else
1547:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tx_period = DEBUG_UART_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_TXBITCTR_PERIOD_REG = DEBUG_UART_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End DEBUG_UART_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1551:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     DEBUG_UART_TXDATA_REG = 0u;
 783              		.loc 1 1552 0
 784 0048 46F24853 		movw	r3, #25928
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 42


 785 004c C4F20003 		movt	r3, 16384
 786 0050 4FF00002 		mov	r2, #0
 787 0054 1A70     		strb	r2, [r3, #0]
 788              	.L35:
1553:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1554:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1556:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tmpStat = DEBUG_UART_TXSTATUS_REG;
 789              		.loc 1 1556 0 discriminator 1
 790 0056 46F26853 		movw	r3, #25960
 791 005a C4F20003 		movt	r3, 16384
 792 005e 1B78     		ldrb	r3, [r3, #0]
 793 0060 FB73     		strb	r3, [r7, #15]
1557:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }while((tmpStat & DEBUG_UART_TX_STS_FIFO_EMPTY) != 0u);
 794              		.loc 1 1557 0 discriminator 1
 795 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 796 0064 03F00203 		and	r3, r3, #2
 797 0068 002B     		cmp	r3, #0
 798 006a F4D1     		bne	.L35
 799              	.L34:
1558:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1559:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1560:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_WAIT_FOR_COMPLETE_REINIT) ||
 800              		.loc 1 1560 0
 801 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 802 006e 012B     		cmp	r3, #1
 803 0070 02D0     		beq	.L36
 804              		.loc 1 1560 0 is_stmt 0 discriminator 1
 805 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 806 0074 032B     		cmp	r3, #3
 807 0076 0DD1     		bne	.L37
 808              	.L36:
1561:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1563:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     {
1565:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         tmpStat = DEBUG_UART_TXSTATUS_REG;
 809              		.loc 1 1565 0 is_stmt 1 discriminator 1
 810 0078 46F26853 		movw	r3, #25960
 811 007c C4F20003 		movt	r3, 16384
 812 0080 1B78     		ldrb	r3, [r3, #0]
 813 0082 FB73     		strb	r3, [r7, #15]
1566:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     }while(((uint8)~tmpStat & DEBUG_UART_TX_STS_COMPLETE) != 0u);
 814              		.loc 1 1566 0 discriminator 1
 815 0084 FB7B     		ldrb	r3, [r7, #15]
 816 0086 6FEA0303 		mvn	r3, r3
 817 008a DBB2     		uxtb	r3, r3
 818 008c 03F00103 		and	r3, r3, #1
 819 0090 002B     		cmp	r3, #0
 820 0092 F1D1     		bne	.L36
 821              	.L37:
1567:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1568:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1569:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 if( (retMode == DEBUG_UART_WAIT_FOR_COMPLETE_REINIT) ||
 822              		.loc 1 1569 0
 823 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 824 0096 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 43


 825 0098 05D0     		beq	.L38
 826              		.loc 1 1569 0 is_stmt 0 discriminator 1
 827 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 828 009c 022B     		cmp	r3, #2
 829 009e 02D0     		beq	.L38
1570:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_REINIT) ||
 830              		.loc 1 1570 0 is_stmt 1
 831 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 832 00a2 032B     		cmp	r3, #3
 833 00a4 09D1     		bne	.L31
 834              	.L38:
1571:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     (retMode == DEBUG_UART_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 {
1573:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1574:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if(DEBUG_UART_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_TXBITCLKTX_COMPLETE_REG = tx_period;
 835              		.loc 1 1575 0
 836 00a6 46F23443 		movw	r3, #25652
 837 00aa C4F20003 		movt	r3, 16384
 838 00ae 40F20002 		movw	r2, #:lower16:tx_period.4861
 839 00b2 C0F20002 		movt	r2, #:upper16:tx_period.4861
 840 00b6 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 841 00b8 1A70     		strb	r2, [r3, #0]
 842              	.L31:
 843              	.LBE2:
1576:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #else
1577:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End DEBUG_UART_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1580:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #if( (DEBUG_UART_PARITY_TYPE != DEBUG_UART__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC5/DEBUG_UART.c ****                          (DEBUG_UART_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/DEBUG_UART.c ****                         DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                       (uint8)~DEBUG_UART_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/DEBUG_UART.c ****                     #endif /* End DEBUG_UART_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 }
1586:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif    /* End DEBUG_UART_HD_ENABLED */
1587:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1588:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 844              		.loc 1 1588 0
 845 00ba 07F11407 		add	r7, r7, #20
 846 00be BD46     		mov	sp, r7
 847 00c0 80BC     		pop	{r7}
 848 00c2 7047     		bx	lr
 849              		.cfi_endproc
 850              	.LFE15:
 851              		.size	DEBUG_UART_SendBreak, .-DEBUG_UART_SendBreak
 852              		.section	.text.DEBUG_UART_SetTxAddressMode,"ax",%progbits
 853              		.align	2
 854              		.global	DEBUG_UART_SetTxAddressMode
 855              		.thumb
 856              		.thumb_func
 857              		.type	DEBUG_UART_SetTxAddressMode, %function
 858              	DEBUG_UART_SetTxAddressMode:
 859              	.LFB16:
1589:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1590:.\Generated_Source\PSoC5/DEBUG_UART.c **** 
1591:.\Generated_Source\PSoC5/DEBUG_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 44


1592:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Function Name: DEBUG_UART_SetTxAddressMode
1593:.\Generated_Source\PSoC5/DEBUG_UART.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1595:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Summary:
1596:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1598:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1602:.\Generated_Source\PSoC5/DEBUG_UART.c ****     * Return:
1603:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *  None.
1604:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *
1605:.\Generated_Source\PSoC5/DEBUG_UART.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/DEBUG_UART.c ****     void DEBUG_UART_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/DEBUG_UART.c ****     {
 860              		.loc 1 1607 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 8
 863              		@ frame_needed = 1, uses_anonymous_args = 0
 864              		@ link register save eliminated.
 865 0000 80B4     		push	{r7}
 866              	.LCFI44:
 867              		.cfi_def_cfa_offset 4
 868              		.cfi_offset 7, -4
 869 0002 83B0     		sub	sp, sp, #12
 870              	.LCFI45:
 871              		.cfi_def_cfa_offset 16
 872 0004 00AF     		add	r7, sp, #0
 873              	.LCFI46:
 874              		.cfi_def_cfa_register 7
 875 0006 0346     		mov	r3, r0
 876 0008 FB71     		strb	r3, [r7, #7]
1608:.\Generated_Source\PSoC5/DEBUG_UART.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC5/DEBUG_UART.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1611:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if( DEBUG_UART_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() |
1613:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                       DEBUG_UART_CTRL_MARK);
1614:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1616:.\Generated_Source\PSoC5/DEBUG_UART.c ****         else
1617:.\Generated_Source\PSoC5/DEBUG_UART.c ****         {
1618:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #if( DEBUG_UART_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC5/DEBUG_UART.c ****                 DEBUG_UART_WriteControlRegister(DEBUG_UART_ReadControlRegister() &
1620:.\Generated_Source\PSoC5/DEBUG_UART.c ****                                                     (uint8)~DEBUG_UART_CTRL_MARK);
1621:.\Generated_Source\PSoC5/DEBUG_UART.c ****             #endif /* End DEBUG_UART_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC5/DEBUG_UART.c ****         }
1623:.\Generated_Source\PSoC5/DEBUG_UART.c ****     }
 877              		.loc 1 1623 0
 878 000a 07F10C07 		add	r7, r7, #12
 879 000e BD46     		mov	sp, r7
 880 0010 80BC     		pop	{r7}
 881 0012 7047     		bx	lr
 882              		.cfi_endproc
 883              	.LFE16:
 884              		.size	DEBUG_UART_SetTxAddressMode, .-DEBUG_UART_SetTxAddressMode
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 45


 885              		.bss
 886              	tx_period.4861:
 887 0001 00       		.space	1
 888              		.text
 889              	.Letext0:
 890              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 891              		.section	.debug_info,"",%progbits
 892              	.Ldebug_info0:
 893 0000 CA030000 		.4byte	0x3ca
 894 0004 0200     		.2byte	0x2
 895 0006 00000000 		.4byte	.Ldebug_abbrev0
 896 000a 04       		.byte	0x4
 897 000b 01       		.uleb128 0x1
 898 000c E4020000 		.4byte	.LASF45
 899 0010 01       		.byte	0x1
 900 0011 D7000000 		.4byte	.LASF46
 901 0015 0A010000 		.4byte	.LASF47
 902 0019 00000000 		.4byte	.Ldebug_ranges0+0
 903 001d 00000000 		.4byte	0
 904 0021 00000000 		.4byte	0
 905 0025 00000000 		.4byte	.Ldebug_line0
 906 0029 02       		.uleb128 0x2
 907 002a 01       		.byte	0x1
 908 002b 06       		.byte	0x6
 909 002c 46030000 		.4byte	.LASF0
 910 0030 02       		.uleb128 0x2
 911 0031 01       		.byte	0x1
 912 0032 08       		.byte	0x8
 913 0033 42020000 		.4byte	.LASF1
 914 0037 02       		.uleb128 0x2
 915 0038 02       		.byte	0x2
 916 0039 05       		.byte	0x5
 917 003a AA020000 		.4byte	.LASF2
 918 003e 02       		.uleb128 0x2
 919 003f 02       		.byte	0x2
 920 0040 07       		.byte	0x7
 921 0041 C4000000 		.4byte	.LASF3
 922 0045 02       		.uleb128 0x2
 923 0046 04       		.byte	0x4
 924 0047 05       		.byte	0x5
 925 0048 2D030000 		.4byte	.LASF4
 926 004c 02       		.uleb128 0x2
 927 004d 04       		.byte	0x4
 928 004e 07       		.byte	0x7
 929 004f 6B010000 		.4byte	.LASF5
 930 0053 02       		.uleb128 0x2
 931 0054 08       		.byte	0x8
 932 0055 05       		.byte	0x5
 933 0056 00000000 		.4byte	.LASF6
 934 005a 02       		.uleb128 0x2
 935 005b 08       		.byte	0x8
 936 005c 07       		.byte	0x7
 937 005d 62020000 		.4byte	.LASF7
 938 0061 03       		.uleb128 0x3
 939 0062 04       		.byte	0x4
 940 0063 05       		.byte	0x5
 941 0064 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 46


 942 0068 02       		.uleb128 0x2
 943 0069 04       		.byte	0x4
 944 006a 07       		.byte	0x7
 945 006b 50020000 		.4byte	.LASF8
 946 006f 04       		.uleb128 0x4
 947 0070 7D010000 		.4byte	.LASF9
 948 0074 02       		.byte	0x2
 949 0075 5B       		.byte	0x5b
 950 0076 30000000 		.4byte	0x30
 951 007a 04       		.uleb128 0x4
 952 007b 1A020000 		.4byte	.LASF10
 953 007f 02       		.byte	0x2
 954 0080 5C       		.byte	0x5c
 955 0081 3E000000 		.4byte	0x3e
 956 0085 02       		.uleb128 0x2
 957 0086 04       		.byte	0x4
 958 0087 04       		.byte	0x4
 959 0088 04010000 		.4byte	.LASF11
 960 008c 02       		.uleb128 0x2
 961 008d 08       		.byte	0x8
 962 008e 04       		.byte	0x4
 963 008f F0010000 		.4byte	.LASF12
 964 0093 04       		.uleb128 0x4
 965 0094 82020000 		.4byte	.LASF13
 966 0098 02       		.byte	0x2
 967 0099 6C       		.byte	0x6c
 968 009a 9E000000 		.4byte	0x9e
 969 009e 02       		.uleb128 0x2
 970 009f 01       		.byte	0x1
 971 00a0 08       		.byte	0x8
 972 00a1 9D020000 		.4byte	.LASF14
 973 00a5 04       		.uleb128 0x4
 974 00a6 66010000 		.4byte	.LASF15
 975 00aa 02       		.byte	0x2
 976 00ab F0       		.byte	0xf0
 977 00ac B0000000 		.4byte	0xb0
 978 00b0 05       		.uleb128 0x5
 979 00b1 6F000000 		.4byte	0x6f
 980 00b5 02       		.uleb128 0x2
 981 00b6 04       		.byte	0x4
 982 00b7 07       		.byte	0x7
 983 00b8 79020000 		.4byte	.LASF16
 984 00bc 06       		.uleb128 0x6
 985 00bd 01       		.byte	0x1
 986 00be 21020000 		.4byte	.LASF17
 987 00c2 01       		.byte	0x1
 988 00c3 49       		.byte	0x49
 989 00c4 01       		.byte	0x1
 990 00c5 00000000 		.4byte	.LFB0
 991 00c9 2A000000 		.4byte	.LFE0
 992 00cd 00000000 		.4byte	.LLST0
 993 00d1 01       		.byte	0x1
 994 00d2 07       		.uleb128 0x7
 995 00d3 01       		.byte	0x1
 996 00d4 32020000 		.4byte	.LASF18
 997 00d8 01       		.byte	0x1
 998 00d9 65       		.byte	0x65
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 47


 999 00da 01       		.byte	0x1
 1000 00db 00000000 		.4byte	.LFB1
 1001 00df 34000000 		.4byte	.LFE1
 1002 00e3 2C000000 		.4byte	.LLST1
 1003 00e7 01       		.byte	0x1
 1004 00e8 08       		.uleb128 0x8
 1005 00e9 01       		.byte	0x1
 1006 00ea 08020000 		.4byte	.LASF19
 1007 00ee 01       		.byte	0x1
 1008 00ef AE       		.byte	0xae
 1009 00f0 01       		.byte	0x1
 1010 00f1 00000000 		.4byte	.LFB2
 1011 00f5 3E000000 		.4byte	.LFE2
 1012 00f9 58000000 		.4byte	.LLST2
 1013 00fd 01       		.byte	0x1
 1014 00fe 11010000 		.4byte	0x111
 1015 0102 09       		.uleb128 0x9
 1016 0103 95010000 		.4byte	.LASF21
 1017 0107 01       		.byte	0x1
 1018 0108 B0       		.byte	0xb0
 1019 0109 6F000000 		.4byte	0x6f
 1020 010d 02       		.byte	0x2
 1021 010e 91       		.byte	0x91
 1022 010f 77       		.sleb128 -9
 1023 0110 00       		.byte	0
 1024 0111 08       		.uleb128 0x8
 1025 0112 01       		.byte	0x1
 1026 0113 36030000 		.4byte	.LASF20
 1027 0117 01       		.byte	0x1
 1028 0118 E3       		.byte	0xe3
 1029 0119 01       		.byte	0x1
 1030 011a 00000000 		.4byte	.LFB3
 1031 011e 3E000000 		.4byte	.LFE3
 1032 0122 90000000 		.4byte	.LLST3
 1033 0126 01       		.byte	0x1
 1034 0127 3A010000 		.4byte	0x13a
 1035 012b 09       		.uleb128 0x9
 1036 012c 95010000 		.4byte	.LASF21
 1037 0130 01       		.byte	0x1
 1038 0131 E5       		.byte	0xe5
 1039 0132 6F000000 		.4byte	0x6f
 1040 0136 02       		.byte	0x2
 1041 0137 91       		.byte	0x91
 1042 0138 77       		.sleb128 -9
 1043 0139 00       		.byte	0
 1044 013a 0A       		.uleb128 0xa
 1045 013b 01       		.byte	0x1
 1046 013c 6B000000 		.4byte	.LASF28
 1047 0140 01       		.byte	0x1
 1048 0141 1901     		.2byte	0x119
 1049 0143 01       		.byte	0x1
 1050 0144 6F000000 		.4byte	0x6f
 1051 0148 00000000 		.4byte	.LFB4
 1052 014c 10000000 		.4byte	.LFE4
 1053 0150 C8000000 		.4byte	.LLST4
 1054 0154 01       		.byte	0x1
 1055 0155 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 48


 1056 0156 01       		.byte	0x1
 1057 0157 D0010000 		.4byte	.LASF22
 1058 015b 01       		.byte	0x1
 1059 015c 3101     		.2byte	0x131
 1060 015e 01       		.byte	0x1
 1061 015f 00000000 		.4byte	.LFB5
 1062 0163 14000000 		.4byte	.LFE5
 1063 0167 F4000000 		.4byte	.LLST5
 1064 016b 01       		.byte	0x1
 1065 016c 80010000 		.4byte	0x180
 1066 0170 0C       		.uleb128 0xc
 1067 0171 83010000 		.4byte	.LASF24
 1068 0175 01       		.byte	0x1
 1069 0176 3101     		.2byte	0x131
 1070 0178 6F000000 		.4byte	0x6f
 1071 017c 02       		.byte	0x2
 1072 017d 91       		.byte	0x91
 1073 017e 77       		.sleb128 -9
 1074 017f 00       		.byte	0
 1075 0180 0B       		.uleb128 0xb
 1076 0181 01       		.byte	0x1
 1077 0182 A6000000 		.4byte	.LASF23
 1078 0186 01       		.byte	0x1
 1079 0187 C803     		.2byte	0x3c8
 1080 0189 01       		.byte	0x1
 1081 018a 00000000 		.4byte	.LFB6
 1082 018e 20000000 		.4byte	.LFE6
 1083 0192 2C010000 		.4byte	.LLST6
 1084 0196 01       		.byte	0x1
 1085 0197 AB010000 		.4byte	0x1ab
 1086 019b 0C       		.uleb128 0xc
 1087 019c F7010000 		.4byte	.LASF25
 1088 01a0 01       		.byte	0x1
 1089 01a1 C803     		.2byte	0x3c8
 1090 01a3 6F000000 		.4byte	0x6f
 1091 01a7 02       		.byte	0x2
 1092 01a8 91       		.byte	0x91
 1093 01a9 77       		.sleb128 -9
 1094 01aa 00       		.byte	0
 1095 01ab 0B       		.uleb128 0xb
 1096 01ac 01       		.byte	0x1
 1097 01ad B9010000 		.4byte	.LASF26
 1098 01b1 01       		.byte	0x1
 1099 01b2 EA03     		.2byte	0x3ea
 1100 01b4 01       		.byte	0x1
 1101 01b5 00000000 		.4byte	.LFB7
 1102 01b9 2E000000 		.4byte	.LFE7
 1103 01bd 64010000 		.4byte	.LLST7
 1104 01c1 01       		.byte	0x1
 1105 01c2 D6010000 		.4byte	0x1d6
 1106 01c6 0C       		.uleb128 0xc
 1107 01c7 88020000 		.4byte	.LASF27
 1108 01cb 01       		.byte	0x1
 1109 01cc EA03     		.2byte	0x3ea
 1110 01ce 6F000000 		.4byte	0x6f
 1111 01d2 02       		.byte	0x2
 1112 01d3 91       		.byte	0x91
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 49


 1113 01d4 77       		.sleb128 -9
 1114 01d5 00       		.byte	0
 1115 01d6 0A       		.uleb128 0xa
 1116 01d7 01       		.byte	0x1
 1117 01d8 65030000 		.4byte	.LASF29
 1118 01dc 01       		.byte	0x1
 1119 01dd 2E04     		.2byte	0x42e
 1120 01df 01       		.byte	0x1
 1121 01e0 6F000000 		.4byte	0x6f
 1122 01e4 00000000 		.4byte	.LFB8
 1123 01e8 18000000 		.4byte	.LFE8
 1124 01ec 9C010000 		.4byte	.LLST8
 1125 01f0 01       		.byte	0x1
 1126 01f1 0B       		.uleb128 0xb
 1127 01f2 01       		.byte	0x1
 1128 01f3 A6010000 		.4byte	.LASF30
 1129 01f7 01       		.byte	0x1
 1130 01f8 5204     		.2byte	0x452
 1131 01fa 01       		.byte	0x1
 1132 01fb 00000000 		.4byte	.LFB9
 1133 01ff 36000000 		.4byte	.LFE9
 1134 0203 C8010000 		.4byte	.LLST9
 1135 0207 01       		.byte	0x1
 1136 0208 1C020000 		.4byte	0x21c
 1137 020c 0C       		.uleb128 0xc
 1138 020d 88020000 		.4byte	.LASF27
 1139 0211 01       		.byte	0x1
 1140 0212 5204     		.2byte	0x452
 1141 0214 6F000000 		.4byte	0x6f
 1142 0218 02       		.byte	0x2
 1143 0219 91       		.byte	0x91
 1144 021a 77       		.sleb128 -9
 1145 021b 00       		.byte	0
 1146 021c 0D       		.uleb128 0xd
 1147 021d 01       		.byte	0x1
 1148 021e 27000000 		.4byte	.LASF31
 1149 0222 01       		.byte	0x1
 1150 0223 AE04     		.2byte	0x4ae
 1151 0225 01       		.byte	0x1
 1152 0226 00000000 		.4byte	.LFB10
 1153 022a 48000000 		.4byte	.LFE10
 1154 022e 00020000 		.4byte	.LLST10
 1155 0232 01       		.byte	0x1
 1156 0233 56020000 		.4byte	0x256
 1157 0237 0C       		.uleb128 0xc
 1158 0238 FD000000 		.4byte	.LASF32
 1159 023c 01       		.byte	0x1
 1160 023d AE04     		.2byte	0x4ae
 1161 023f 56020000 		.4byte	0x256
 1162 0243 02       		.byte	0x2
 1163 0244 91       		.byte	0x91
 1164 0245 6C       		.sleb128 -20
 1165 0246 0E       		.uleb128 0xe
 1166 0247 FE010000 		.4byte	.LASF33
 1167 024b 01       		.byte	0x1
 1168 024c B004     		.2byte	0x4b0
 1169 024e 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 50


 1170 0252 02       		.byte	0x2
 1171 0253 91       		.byte	0x91
 1172 0254 76       		.sleb128 -10
 1173 0255 00       		.byte	0
 1174 0256 0F       		.uleb128 0xf
 1175 0257 04       		.byte	0x4
 1176 0258 5C020000 		.4byte	0x25c
 1177 025c 10       		.uleb128 0x10
 1178 025d 93000000 		.4byte	0x93
 1179 0261 0D       		.uleb128 0xd
 1180 0262 01       		.byte	0x1
 1181 0263 8A000000 		.4byte	.LASF34
 1182 0267 01       		.byte	0x1
 1183 0268 D404     		.2byte	0x4d4
 1184 026a 01       		.byte	0x1
 1185 026b 00000000 		.4byte	.LFB11
 1186 026f 46000000 		.4byte	.LFE11
 1187 0273 38020000 		.4byte	.LLST11
 1188 0277 01       		.byte	0x1
 1189 0278 AA020000 		.4byte	0x2aa
 1190 027c 0C       		.uleb128 0xc
 1191 027d FD000000 		.4byte	.LASF32
 1192 0281 01       		.byte	0x1
 1193 0282 D404     		.2byte	0x4d4
 1194 0284 AA020000 		.4byte	0x2aa
 1195 0288 02       		.byte	0x2
 1196 0289 91       		.byte	0x91
 1197 028a 6C       		.sleb128 -20
 1198 028b 0C       		.uleb128 0xc
 1199 028c 8B010000 		.4byte	.LASF35
 1200 0290 01       		.byte	0x1
 1201 0291 D404     		.2byte	0x4d4
 1202 0293 6F000000 		.4byte	0x6f
 1203 0297 02       		.byte	0x2
 1204 0298 91       		.byte	0x91
 1205 0299 6B       		.sleb128 -21
 1206 029a 0E       		.uleb128 0xe
 1207 029b FE010000 		.4byte	.LASF33
 1208 029f 01       		.byte	0x1
 1209 02a0 D704     		.2byte	0x4d7
 1210 02a2 6F000000 		.4byte	0x6f
 1211 02a6 02       		.byte	0x2
 1212 02a7 91       		.byte	0x91
 1213 02a8 77       		.sleb128 -9
 1214 02a9 00       		.byte	0
 1215 02aa 0F       		.uleb128 0xf
 1216 02ab 04       		.byte	0x4
 1217 02ac B0020000 		.4byte	0x2b0
 1218 02b0 10       		.uleb128 0x10
 1219 02b1 6F000000 		.4byte	0x6f
 1220 02b5 0D       		.uleb128 0xd
 1221 02b6 01       		.byte	0x1
 1222 02b7 58000000 		.4byte	.LASF36
 1223 02bb 01       		.byte	0x1
 1224 02bc F904     		.2byte	0x4f9
 1225 02be 01       		.byte	0x1
 1226 02bf 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 51


 1227 02c3 38000000 		.4byte	.LFE12
 1228 02c7 70020000 		.4byte	.LLST12
 1229 02cb 01       		.byte	0x1
 1230 02cc E0020000 		.4byte	0x2e0
 1231 02d0 0C       		.uleb128 0xc
 1232 02d1 88020000 		.4byte	.LASF27
 1233 02d5 01       		.byte	0x1
 1234 02d6 F904     		.2byte	0x4f9
 1235 02d8 6F000000 		.4byte	0x6f
 1236 02dc 02       		.byte	0x2
 1237 02dd 91       		.byte	0x91
 1238 02de 77       		.sleb128 -9
 1239 02df 00       		.byte	0
 1240 02e0 11       		.uleb128 0x11
 1241 02e1 01       		.byte	0x1
 1242 02e2 C9020000 		.4byte	.LASF48
 1243 02e6 01       		.byte	0x1
 1244 02e7 1E05     		.2byte	0x51e
 1245 02e9 01       		.byte	0x1
 1246 02ea 6F000000 		.4byte	0x6f
 1247 02ee 00000000 		.4byte	.LFB13
 1248 02f2 4A000000 		.4byte	.LFE13
 1249 02f6 A8020000 		.4byte	.LLST13
 1250 02fa 01       		.byte	0x1
 1251 02fb 0F030000 		.4byte	0x30f
 1252 02ff 0E       		.uleb128 0xe
 1253 0300 5D020000 		.4byte	.LASF37
 1254 0304 01       		.byte	0x1
 1255 0305 2105     		.2byte	0x521
 1256 0307 6F000000 		.4byte	0x6f
 1257 030b 02       		.byte	0x2
 1258 030c 91       		.byte	0x91
 1259 030d 77       		.sleb128 -9
 1260 030e 00       		.byte	0
 1261 030f 0D       		.uleb128 0xd
 1262 0310 01       		.byte	0x1
 1263 0311 0E000000 		.4byte	.LASF38
 1264 0315 01       		.byte	0x1
 1265 0316 7405     		.2byte	0x574
 1266 0318 01       		.byte	0x1
 1267 0319 00000000 		.4byte	.LFB14
 1268 031d 56000000 		.4byte	.LFE14
 1269 0321 E0020000 		.4byte	.LLST14
 1270 0325 01       		.byte	0x1
 1271 0326 3A030000 		.4byte	0x33a
 1272 032a 0E       		.uleb128 0xe
 1273 032b 95010000 		.4byte	.LASF21
 1274 032f 01       		.byte	0x1
 1275 0330 7605     		.2byte	0x576
 1276 0332 6F000000 		.4byte	0x6f
 1277 0336 02       		.byte	0x2
 1278 0337 91       		.byte	0x91
 1279 0338 77       		.sleb128 -9
 1280 0339 00       		.byte	0
 1281 033a 0B       		.uleb128 0xb
 1282 033b 01       		.byte	0x1
 1283 033c B4020000 		.4byte	.LASF39
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 52


 1284 0340 01       		.byte	0x1
 1285 0341 CD05     		.2byte	0x5cd
 1286 0343 01       		.byte	0x1
 1287 0344 00000000 		.4byte	.LFB15
 1288 0348 C4000000 		.4byte	.LFE15
 1289 034c 18030000 		.4byte	.LLST15
 1290 0350 01       		.byte	0x1
 1291 0351 90030000 		.4byte	0x390
 1292 0355 0C       		.uleb128 0xc
 1293 0356 A2020000 		.4byte	.LASF40
 1294 035a 01       		.byte	0x1
 1295 035b CD05     		.2byte	0x5cd
 1296 035d 6F000000 		.4byte	0x6f
 1297 0361 02       		.byte	0x2
 1298 0362 91       		.byte	0x91
 1299 0363 6F       		.sleb128 -17
 1300 0364 12       		.uleb128 0x12
 1301 0365 18000000 		.4byte	.LBB2
 1302 0369 BA000000 		.4byte	.LBE2
 1303 036d 0E       		.uleb128 0xe
 1304 036e 9E000000 		.4byte	.LASF41
 1305 0372 01       		.byte	0x1
 1306 0373 D505     		.2byte	0x5d5
 1307 0375 6F000000 		.4byte	0x6f
 1308 0379 02       		.byte	0x2
 1309 037a 91       		.byte	0x91
 1310 037b 77       		.sleb128 -9
 1311 037c 0E       		.uleb128 0xe
 1312 037d 93020000 		.4byte	.LASF42
 1313 0381 01       		.byte	0x1
 1314 0382 FB05     		.2byte	0x5fb
 1315 0384 6F000000 		.4byte	0x6f
 1316 0388 05       		.byte	0x5
 1317 0389 03       		.byte	0x3
 1318 038a 01000000 		.4byte	tx_period.4861
 1319 038e 00       		.byte	0
 1320 038f 00       		.byte	0
 1321 0390 0B       		.uleb128 0xb
 1322 0391 01       		.byte	0x1
 1323 0392 3C000000 		.4byte	.LASF43
 1324 0396 01       		.byte	0x1
 1325 0397 4606     		.2byte	0x646
 1326 0399 01       		.byte	0x1
 1327 039a 00000000 		.4byte	.LFB16
 1328 039e 14000000 		.4byte	.LFE16
 1329 03a2 50030000 		.4byte	.LLST16
 1330 03a6 01       		.byte	0x1
 1331 03a7 BB030000 		.4byte	0x3bb
 1332 03ab 0C       		.uleb128 0xc
 1333 03ac 5A010000 		.4byte	.LASF44
 1334 03b0 01       		.byte	0x1
 1335 03b1 4606     		.2byte	0x646
 1336 03b3 6F000000 		.4byte	0x6f
 1337 03b7 02       		.byte	0x2
 1338 03b8 91       		.byte	0x91
 1339 03b9 77       		.sleb128 -9
 1340 03ba 00       		.byte	0
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 53


 1341 03bb 13       		.uleb128 0x13
 1342 03bc 52030000 		.4byte	.LASF49
 1343 03c0 01       		.byte	0x1
 1344 03c1 1C       		.byte	0x1c
 1345 03c2 6F000000 		.4byte	0x6f
 1346 03c6 01       		.byte	0x1
 1347 03c7 05       		.byte	0x5
 1348 03c8 03       		.byte	0x3
 1349 03c9 00000000 		.4byte	DEBUG_UART_initVar
 1350 03cd 00       		.byte	0
 1351              		.section	.debug_abbrev,"",%progbits
 1352              	.Ldebug_abbrev0:
 1353 0000 01       		.uleb128 0x1
 1354 0001 11       		.uleb128 0x11
 1355 0002 01       		.byte	0x1
 1356 0003 25       		.uleb128 0x25
 1357 0004 0E       		.uleb128 0xe
 1358 0005 13       		.uleb128 0x13
 1359 0006 0B       		.uleb128 0xb
 1360 0007 03       		.uleb128 0x3
 1361 0008 0E       		.uleb128 0xe
 1362 0009 1B       		.uleb128 0x1b
 1363 000a 0E       		.uleb128 0xe
 1364 000b 55       		.uleb128 0x55
 1365 000c 06       		.uleb128 0x6
 1366 000d 11       		.uleb128 0x11
 1367 000e 01       		.uleb128 0x1
 1368 000f 52       		.uleb128 0x52
 1369 0010 01       		.uleb128 0x1
 1370 0011 10       		.uleb128 0x10
 1371 0012 06       		.uleb128 0x6
 1372 0013 00       		.byte	0
 1373 0014 00       		.byte	0
 1374 0015 02       		.uleb128 0x2
 1375 0016 24       		.uleb128 0x24
 1376 0017 00       		.byte	0
 1377 0018 0B       		.uleb128 0xb
 1378 0019 0B       		.uleb128 0xb
 1379 001a 3E       		.uleb128 0x3e
 1380 001b 0B       		.uleb128 0xb
 1381 001c 03       		.uleb128 0x3
 1382 001d 0E       		.uleb128 0xe
 1383 001e 00       		.byte	0
 1384 001f 00       		.byte	0
 1385 0020 03       		.uleb128 0x3
 1386 0021 24       		.uleb128 0x24
 1387 0022 00       		.byte	0
 1388 0023 0B       		.uleb128 0xb
 1389 0024 0B       		.uleb128 0xb
 1390 0025 3E       		.uleb128 0x3e
 1391 0026 0B       		.uleb128 0xb
 1392 0027 03       		.uleb128 0x3
 1393 0028 08       		.uleb128 0x8
 1394 0029 00       		.byte	0
 1395 002a 00       		.byte	0
 1396 002b 04       		.uleb128 0x4
 1397 002c 16       		.uleb128 0x16
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 54


 1398 002d 00       		.byte	0
 1399 002e 03       		.uleb128 0x3
 1400 002f 0E       		.uleb128 0xe
 1401 0030 3A       		.uleb128 0x3a
 1402 0031 0B       		.uleb128 0xb
 1403 0032 3B       		.uleb128 0x3b
 1404 0033 0B       		.uleb128 0xb
 1405 0034 49       		.uleb128 0x49
 1406 0035 13       		.uleb128 0x13
 1407 0036 00       		.byte	0
 1408 0037 00       		.byte	0
 1409 0038 05       		.uleb128 0x5
 1410 0039 35       		.uleb128 0x35
 1411 003a 00       		.byte	0
 1412 003b 49       		.uleb128 0x49
 1413 003c 13       		.uleb128 0x13
 1414 003d 00       		.byte	0
 1415 003e 00       		.byte	0
 1416 003f 06       		.uleb128 0x6
 1417 0040 2E       		.uleb128 0x2e
 1418 0041 00       		.byte	0
 1419 0042 3F       		.uleb128 0x3f
 1420 0043 0C       		.uleb128 0xc
 1421 0044 03       		.uleb128 0x3
 1422 0045 0E       		.uleb128 0xe
 1423 0046 3A       		.uleb128 0x3a
 1424 0047 0B       		.uleb128 0xb
 1425 0048 3B       		.uleb128 0x3b
 1426 0049 0B       		.uleb128 0xb
 1427 004a 27       		.uleb128 0x27
 1428 004b 0C       		.uleb128 0xc
 1429 004c 11       		.uleb128 0x11
 1430 004d 01       		.uleb128 0x1
 1431 004e 12       		.uleb128 0x12
 1432 004f 01       		.uleb128 0x1
 1433 0050 40       		.uleb128 0x40
 1434 0051 06       		.uleb128 0x6
 1435 0052 9642     		.uleb128 0x2116
 1436 0054 0C       		.uleb128 0xc
 1437 0055 00       		.byte	0
 1438 0056 00       		.byte	0
 1439 0057 07       		.uleb128 0x7
 1440 0058 2E       		.uleb128 0x2e
 1441 0059 00       		.byte	0
 1442 005a 3F       		.uleb128 0x3f
 1443 005b 0C       		.uleb128 0xc
 1444 005c 03       		.uleb128 0x3
 1445 005d 0E       		.uleb128 0xe
 1446 005e 3A       		.uleb128 0x3a
 1447 005f 0B       		.uleb128 0xb
 1448 0060 3B       		.uleb128 0x3b
 1449 0061 0B       		.uleb128 0xb
 1450 0062 27       		.uleb128 0x27
 1451 0063 0C       		.uleb128 0xc
 1452 0064 11       		.uleb128 0x11
 1453 0065 01       		.uleb128 0x1
 1454 0066 12       		.uleb128 0x12
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 55


 1455 0067 01       		.uleb128 0x1
 1456 0068 40       		.uleb128 0x40
 1457 0069 06       		.uleb128 0x6
 1458 006a 9742     		.uleb128 0x2117
 1459 006c 0C       		.uleb128 0xc
 1460 006d 00       		.byte	0
 1461 006e 00       		.byte	0
 1462 006f 08       		.uleb128 0x8
 1463 0070 2E       		.uleb128 0x2e
 1464 0071 01       		.byte	0x1
 1465 0072 3F       		.uleb128 0x3f
 1466 0073 0C       		.uleb128 0xc
 1467 0074 03       		.uleb128 0x3
 1468 0075 0E       		.uleb128 0xe
 1469 0076 3A       		.uleb128 0x3a
 1470 0077 0B       		.uleb128 0xb
 1471 0078 3B       		.uleb128 0x3b
 1472 0079 0B       		.uleb128 0xb
 1473 007a 27       		.uleb128 0x27
 1474 007b 0C       		.uleb128 0xc
 1475 007c 11       		.uleb128 0x11
 1476 007d 01       		.uleb128 0x1
 1477 007e 12       		.uleb128 0x12
 1478 007f 01       		.uleb128 0x1
 1479 0080 40       		.uleb128 0x40
 1480 0081 06       		.uleb128 0x6
 1481 0082 9642     		.uleb128 0x2116
 1482 0084 0C       		.uleb128 0xc
 1483 0085 01       		.uleb128 0x1
 1484 0086 13       		.uleb128 0x13
 1485 0087 00       		.byte	0
 1486 0088 00       		.byte	0
 1487 0089 09       		.uleb128 0x9
 1488 008a 34       		.uleb128 0x34
 1489 008b 00       		.byte	0
 1490 008c 03       		.uleb128 0x3
 1491 008d 0E       		.uleb128 0xe
 1492 008e 3A       		.uleb128 0x3a
 1493 008f 0B       		.uleb128 0xb
 1494 0090 3B       		.uleb128 0x3b
 1495 0091 0B       		.uleb128 0xb
 1496 0092 49       		.uleb128 0x49
 1497 0093 13       		.uleb128 0x13
 1498 0094 02       		.uleb128 0x2
 1499 0095 0A       		.uleb128 0xa
 1500 0096 00       		.byte	0
 1501 0097 00       		.byte	0
 1502 0098 0A       		.uleb128 0xa
 1503 0099 2E       		.uleb128 0x2e
 1504 009a 00       		.byte	0
 1505 009b 3F       		.uleb128 0x3f
 1506 009c 0C       		.uleb128 0xc
 1507 009d 03       		.uleb128 0x3
 1508 009e 0E       		.uleb128 0xe
 1509 009f 3A       		.uleb128 0x3a
 1510 00a0 0B       		.uleb128 0xb
 1511 00a1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 56


 1512 00a2 05       		.uleb128 0x5
 1513 00a3 27       		.uleb128 0x27
 1514 00a4 0C       		.uleb128 0xc
 1515 00a5 49       		.uleb128 0x49
 1516 00a6 13       		.uleb128 0x13
 1517 00a7 11       		.uleb128 0x11
 1518 00a8 01       		.uleb128 0x1
 1519 00a9 12       		.uleb128 0x12
 1520 00aa 01       		.uleb128 0x1
 1521 00ab 40       		.uleb128 0x40
 1522 00ac 06       		.uleb128 0x6
 1523 00ad 9742     		.uleb128 0x2117
 1524 00af 0C       		.uleb128 0xc
 1525 00b0 00       		.byte	0
 1526 00b1 00       		.byte	0
 1527 00b2 0B       		.uleb128 0xb
 1528 00b3 2E       		.uleb128 0x2e
 1529 00b4 01       		.byte	0x1
 1530 00b5 3F       		.uleb128 0x3f
 1531 00b6 0C       		.uleb128 0xc
 1532 00b7 03       		.uleb128 0x3
 1533 00b8 0E       		.uleb128 0xe
 1534 00b9 3A       		.uleb128 0x3a
 1535 00ba 0B       		.uleb128 0xb
 1536 00bb 3B       		.uleb128 0x3b
 1537 00bc 05       		.uleb128 0x5
 1538 00bd 27       		.uleb128 0x27
 1539 00be 0C       		.uleb128 0xc
 1540 00bf 11       		.uleb128 0x11
 1541 00c0 01       		.uleb128 0x1
 1542 00c1 12       		.uleb128 0x12
 1543 00c2 01       		.uleb128 0x1
 1544 00c3 40       		.uleb128 0x40
 1545 00c4 06       		.uleb128 0x6
 1546 00c5 9742     		.uleb128 0x2117
 1547 00c7 0C       		.uleb128 0xc
 1548 00c8 01       		.uleb128 0x1
 1549 00c9 13       		.uleb128 0x13
 1550 00ca 00       		.byte	0
 1551 00cb 00       		.byte	0
 1552 00cc 0C       		.uleb128 0xc
 1553 00cd 05       		.uleb128 0x5
 1554 00ce 00       		.byte	0
 1555 00cf 03       		.uleb128 0x3
 1556 00d0 0E       		.uleb128 0xe
 1557 00d1 3A       		.uleb128 0x3a
 1558 00d2 0B       		.uleb128 0xb
 1559 00d3 3B       		.uleb128 0x3b
 1560 00d4 05       		.uleb128 0x5
 1561 00d5 49       		.uleb128 0x49
 1562 00d6 13       		.uleb128 0x13
 1563 00d7 02       		.uleb128 0x2
 1564 00d8 0A       		.uleb128 0xa
 1565 00d9 00       		.byte	0
 1566 00da 00       		.byte	0
 1567 00db 0D       		.uleb128 0xd
 1568 00dc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 57


 1569 00dd 01       		.byte	0x1
 1570 00de 3F       		.uleb128 0x3f
 1571 00df 0C       		.uleb128 0xc
 1572 00e0 03       		.uleb128 0x3
 1573 00e1 0E       		.uleb128 0xe
 1574 00e2 3A       		.uleb128 0x3a
 1575 00e3 0B       		.uleb128 0xb
 1576 00e4 3B       		.uleb128 0x3b
 1577 00e5 05       		.uleb128 0x5
 1578 00e6 27       		.uleb128 0x27
 1579 00e7 0C       		.uleb128 0xc
 1580 00e8 11       		.uleb128 0x11
 1581 00e9 01       		.uleb128 0x1
 1582 00ea 12       		.uleb128 0x12
 1583 00eb 01       		.uleb128 0x1
 1584 00ec 40       		.uleb128 0x40
 1585 00ed 06       		.uleb128 0x6
 1586 00ee 9642     		.uleb128 0x2116
 1587 00f0 0C       		.uleb128 0xc
 1588 00f1 01       		.uleb128 0x1
 1589 00f2 13       		.uleb128 0x13
 1590 00f3 00       		.byte	0
 1591 00f4 00       		.byte	0
 1592 00f5 0E       		.uleb128 0xe
 1593 00f6 34       		.uleb128 0x34
 1594 00f7 00       		.byte	0
 1595 00f8 03       		.uleb128 0x3
 1596 00f9 0E       		.uleb128 0xe
 1597 00fa 3A       		.uleb128 0x3a
 1598 00fb 0B       		.uleb128 0xb
 1599 00fc 3B       		.uleb128 0x3b
 1600 00fd 05       		.uleb128 0x5
 1601 00fe 49       		.uleb128 0x49
 1602 00ff 13       		.uleb128 0x13
 1603 0100 02       		.uleb128 0x2
 1604 0101 0A       		.uleb128 0xa
 1605 0102 00       		.byte	0
 1606 0103 00       		.byte	0
 1607 0104 0F       		.uleb128 0xf
 1608 0105 0F       		.uleb128 0xf
 1609 0106 00       		.byte	0
 1610 0107 0B       		.uleb128 0xb
 1611 0108 0B       		.uleb128 0xb
 1612 0109 49       		.uleb128 0x49
 1613 010a 13       		.uleb128 0x13
 1614 010b 00       		.byte	0
 1615 010c 00       		.byte	0
 1616 010d 10       		.uleb128 0x10
 1617 010e 26       		.uleb128 0x26
 1618 010f 00       		.byte	0
 1619 0110 49       		.uleb128 0x49
 1620 0111 13       		.uleb128 0x13
 1621 0112 00       		.byte	0
 1622 0113 00       		.byte	0
 1623 0114 11       		.uleb128 0x11
 1624 0115 2E       		.uleb128 0x2e
 1625 0116 01       		.byte	0x1
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 58


 1626 0117 3F       		.uleb128 0x3f
 1627 0118 0C       		.uleb128 0xc
 1628 0119 03       		.uleb128 0x3
 1629 011a 0E       		.uleb128 0xe
 1630 011b 3A       		.uleb128 0x3a
 1631 011c 0B       		.uleb128 0xb
 1632 011d 3B       		.uleb128 0x3b
 1633 011e 05       		.uleb128 0x5
 1634 011f 27       		.uleb128 0x27
 1635 0120 0C       		.uleb128 0xc
 1636 0121 49       		.uleb128 0x49
 1637 0122 13       		.uleb128 0x13
 1638 0123 11       		.uleb128 0x11
 1639 0124 01       		.uleb128 0x1
 1640 0125 12       		.uleb128 0x12
 1641 0126 01       		.uleb128 0x1
 1642 0127 40       		.uleb128 0x40
 1643 0128 06       		.uleb128 0x6
 1644 0129 9742     		.uleb128 0x2117
 1645 012b 0C       		.uleb128 0xc
 1646 012c 01       		.uleb128 0x1
 1647 012d 13       		.uleb128 0x13
 1648 012e 00       		.byte	0
 1649 012f 00       		.byte	0
 1650 0130 12       		.uleb128 0x12
 1651 0131 0B       		.uleb128 0xb
 1652 0132 01       		.byte	0x1
 1653 0133 11       		.uleb128 0x11
 1654 0134 01       		.uleb128 0x1
 1655 0135 12       		.uleb128 0x12
 1656 0136 01       		.uleb128 0x1
 1657 0137 00       		.byte	0
 1658 0138 00       		.byte	0
 1659 0139 13       		.uleb128 0x13
 1660 013a 34       		.uleb128 0x34
 1661 013b 00       		.byte	0
 1662 013c 03       		.uleb128 0x3
 1663 013d 0E       		.uleb128 0xe
 1664 013e 3A       		.uleb128 0x3a
 1665 013f 0B       		.uleb128 0xb
 1666 0140 3B       		.uleb128 0x3b
 1667 0141 0B       		.uleb128 0xb
 1668 0142 49       		.uleb128 0x49
 1669 0143 13       		.uleb128 0x13
 1670 0144 3F       		.uleb128 0x3f
 1671 0145 0C       		.uleb128 0xc
 1672 0146 02       		.uleb128 0x2
 1673 0147 0A       		.uleb128 0xa
 1674 0148 00       		.byte	0
 1675 0149 00       		.byte	0
 1676 014a 00       		.byte	0
 1677              		.section	.debug_loc,"",%progbits
 1678              	.Ldebug_loc0:
 1679              	.LLST0:
 1680 0000 00000000 		.4byte	.LFB0
 1681 0004 02000000 		.4byte	.LCFI0
 1682 0008 0200     		.2byte	0x2
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 59


 1683 000a 7D       		.byte	0x7d
 1684 000b 00       		.sleb128 0
 1685 000c 02000000 		.4byte	.LCFI0
 1686 0010 04000000 		.4byte	.LCFI1
 1687 0014 0200     		.2byte	0x2
 1688 0016 7D       		.byte	0x7d
 1689 0017 08       		.sleb128 8
 1690 0018 04000000 		.4byte	.LCFI1
 1691 001c 2A000000 		.4byte	.LFE0
 1692 0020 0200     		.2byte	0x2
 1693 0022 77       		.byte	0x77
 1694 0023 08       		.sleb128 8
 1695 0024 00000000 		.4byte	0
 1696 0028 00000000 		.4byte	0
 1697              	.LLST1:
 1698 002c 00000000 		.4byte	.LFB1
 1699 0030 02000000 		.4byte	.LCFI2
 1700 0034 0200     		.2byte	0x2
 1701 0036 7D       		.byte	0x7d
 1702 0037 00       		.sleb128 0
 1703 0038 02000000 		.4byte	.LCFI2
 1704 003c 04000000 		.4byte	.LCFI3
 1705 0040 0200     		.2byte	0x2
 1706 0042 7D       		.byte	0x7d
 1707 0043 04       		.sleb128 4
 1708 0044 04000000 		.4byte	.LCFI3
 1709 0048 34000000 		.4byte	.LFE1
 1710 004c 0200     		.2byte	0x2
 1711 004e 77       		.byte	0x77
 1712 004f 04       		.sleb128 4
 1713 0050 00000000 		.4byte	0
 1714 0054 00000000 		.4byte	0
 1715              	.LLST2:
 1716 0058 00000000 		.4byte	.LFB2
 1717 005c 02000000 		.4byte	.LCFI4
 1718 0060 0200     		.2byte	0x2
 1719 0062 7D       		.byte	0x7d
 1720 0063 00       		.sleb128 0
 1721 0064 02000000 		.4byte	.LCFI4
 1722 0068 04000000 		.4byte	.LCFI5
 1723 006c 0200     		.2byte	0x2
 1724 006e 7D       		.byte	0x7d
 1725 006f 08       		.sleb128 8
 1726 0070 04000000 		.4byte	.LCFI5
 1727 0074 06000000 		.4byte	.LCFI6
 1728 0078 0200     		.2byte	0x2
 1729 007a 7D       		.byte	0x7d
 1730 007b 10       		.sleb128 16
 1731 007c 06000000 		.4byte	.LCFI6
 1732 0080 3E000000 		.4byte	.LFE2
 1733 0084 0200     		.2byte	0x2
 1734 0086 77       		.byte	0x77
 1735 0087 10       		.sleb128 16
 1736 0088 00000000 		.4byte	0
 1737 008c 00000000 		.4byte	0
 1738              	.LLST3:
 1739 0090 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 60


 1740 0094 02000000 		.4byte	.LCFI7
 1741 0098 0200     		.2byte	0x2
 1742 009a 7D       		.byte	0x7d
 1743 009b 00       		.sleb128 0
 1744 009c 02000000 		.4byte	.LCFI7
 1745 00a0 04000000 		.4byte	.LCFI8
 1746 00a4 0200     		.2byte	0x2
 1747 00a6 7D       		.byte	0x7d
 1748 00a7 08       		.sleb128 8
 1749 00a8 04000000 		.4byte	.LCFI8
 1750 00ac 06000000 		.4byte	.LCFI9
 1751 00b0 0200     		.2byte	0x2
 1752 00b2 7D       		.byte	0x7d
 1753 00b3 10       		.sleb128 16
 1754 00b4 06000000 		.4byte	.LCFI9
 1755 00b8 3E000000 		.4byte	.LFE3
 1756 00bc 0200     		.2byte	0x2
 1757 00be 77       		.byte	0x77
 1758 00bf 10       		.sleb128 16
 1759 00c0 00000000 		.4byte	0
 1760 00c4 00000000 		.4byte	0
 1761              	.LLST4:
 1762 00c8 00000000 		.4byte	.LFB4
 1763 00cc 02000000 		.4byte	.LCFI10
 1764 00d0 0200     		.2byte	0x2
 1765 00d2 7D       		.byte	0x7d
 1766 00d3 00       		.sleb128 0
 1767 00d4 02000000 		.4byte	.LCFI10
 1768 00d8 04000000 		.4byte	.LCFI11
 1769 00dc 0200     		.2byte	0x2
 1770 00de 7D       		.byte	0x7d
 1771 00df 04       		.sleb128 4
 1772 00e0 04000000 		.4byte	.LCFI11
 1773 00e4 10000000 		.4byte	.LFE4
 1774 00e8 0200     		.2byte	0x2
 1775 00ea 77       		.byte	0x77
 1776 00eb 04       		.sleb128 4
 1777 00ec 00000000 		.4byte	0
 1778 00f0 00000000 		.4byte	0
 1779              	.LLST5:
 1780 00f4 00000000 		.4byte	.LFB5
 1781 00f8 02000000 		.4byte	.LCFI12
 1782 00fc 0200     		.2byte	0x2
 1783 00fe 7D       		.byte	0x7d
 1784 00ff 00       		.sleb128 0
 1785 0100 02000000 		.4byte	.LCFI12
 1786 0104 04000000 		.4byte	.LCFI13
 1787 0108 0200     		.2byte	0x2
 1788 010a 7D       		.byte	0x7d
 1789 010b 04       		.sleb128 4
 1790 010c 04000000 		.4byte	.LCFI13
 1791 0110 06000000 		.4byte	.LCFI14
 1792 0114 0200     		.2byte	0x2
 1793 0116 7D       		.byte	0x7d
 1794 0117 10       		.sleb128 16
 1795 0118 06000000 		.4byte	.LCFI14
 1796 011c 14000000 		.4byte	.LFE5
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 61


 1797 0120 0200     		.2byte	0x2
 1798 0122 77       		.byte	0x77
 1799 0123 10       		.sleb128 16
 1800 0124 00000000 		.4byte	0
 1801 0128 00000000 		.4byte	0
 1802              	.LLST6:
 1803 012c 00000000 		.4byte	.LFB6
 1804 0130 02000000 		.4byte	.LCFI15
 1805 0134 0200     		.2byte	0x2
 1806 0136 7D       		.byte	0x7d
 1807 0137 00       		.sleb128 0
 1808 0138 02000000 		.4byte	.LCFI15
 1809 013c 04000000 		.4byte	.LCFI16
 1810 0140 0200     		.2byte	0x2
 1811 0142 7D       		.byte	0x7d
 1812 0143 04       		.sleb128 4
 1813 0144 04000000 		.4byte	.LCFI16
 1814 0148 06000000 		.4byte	.LCFI17
 1815 014c 0200     		.2byte	0x2
 1816 014e 7D       		.byte	0x7d
 1817 014f 10       		.sleb128 16
 1818 0150 06000000 		.4byte	.LCFI17
 1819 0154 20000000 		.4byte	.LFE6
 1820 0158 0200     		.2byte	0x2
 1821 015a 77       		.byte	0x77
 1822 015b 10       		.sleb128 16
 1823 015c 00000000 		.4byte	0
 1824 0160 00000000 		.4byte	0
 1825              	.LLST7:
 1826 0164 00000000 		.4byte	.LFB7
 1827 0168 02000000 		.4byte	.LCFI18
 1828 016c 0200     		.2byte	0x2
 1829 016e 7D       		.byte	0x7d
 1830 016f 00       		.sleb128 0
 1831 0170 02000000 		.4byte	.LCFI18
 1832 0174 04000000 		.4byte	.LCFI19
 1833 0178 0200     		.2byte	0x2
 1834 017a 7D       		.byte	0x7d
 1835 017b 04       		.sleb128 4
 1836 017c 04000000 		.4byte	.LCFI19
 1837 0180 06000000 		.4byte	.LCFI20
 1838 0184 0200     		.2byte	0x2
 1839 0186 7D       		.byte	0x7d
 1840 0187 10       		.sleb128 16
 1841 0188 06000000 		.4byte	.LCFI20
 1842 018c 2E000000 		.4byte	.LFE7
 1843 0190 0200     		.2byte	0x2
 1844 0192 77       		.byte	0x77
 1845 0193 10       		.sleb128 16
 1846 0194 00000000 		.4byte	0
 1847 0198 00000000 		.4byte	0
 1848              	.LLST8:
 1849 019c 00000000 		.4byte	.LFB8
 1850 01a0 02000000 		.4byte	.LCFI21
 1851 01a4 0200     		.2byte	0x2
 1852 01a6 7D       		.byte	0x7d
 1853 01a7 00       		.sleb128 0
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 62


 1854 01a8 02000000 		.4byte	.LCFI21
 1855 01ac 04000000 		.4byte	.LCFI22
 1856 01b0 0200     		.2byte	0x2
 1857 01b2 7D       		.byte	0x7d
 1858 01b3 04       		.sleb128 4
 1859 01b4 04000000 		.4byte	.LCFI22
 1860 01b8 18000000 		.4byte	.LFE8
 1861 01bc 0200     		.2byte	0x2
 1862 01be 77       		.byte	0x77
 1863 01bf 04       		.sleb128 4
 1864 01c0 00000000 		.4byte	0
 1865 01c4 00000000 		.4byte	0
 1866              	.LLST9:
 1867 01c8 00000000 		.4byte	.LFB9
 1868 01cc 02000000 		.4byte	.LCFI23
 1869 01d0 0200     		.2byte	0x2
 1870 01d2 7D       		.byte	0x7d
 1871 01d3 00       		.sleb128 0
 1872 01d4 02000000 		.4byte	.LCFI23
 1873 01d8 04000000 		.4byte	.LCFI24
 1874 01dc 0200     		.2byte	0x2
 1875 01de 7D       		.byte	0x7d
 1876 01df 04       		.sleb128 4
 1877 01e0 04000000 		.4byte	.LCFI24
 1878 01e4 06000000 		.4byte	.LCFI25
 1879 01e8 0200     		.2byte	0x2
 1880 01ea 7D       		.byte	0x7d
 1881 01eb 10       		.sleb128 16
 1882 01ec 06000000 		.4byte	.LCFI25
 1883 01f0 36000000 		.4byte	.LFE9
 1884 01f4 0200     		.2byte	0x2
 1885 01f6 77       		.byte	0x77
 1886 01f7 10       		.sleb128 16
 1887 01f8 00000000 		.4byte	0
 1888 01fc 00000000 		.4byte	0
 1889              	.LLST10:
 1890 0200 00000000 		.4byte	.LFB10
 1891 0204 02000000 		.4byte	.LCFI26
 1892 0208 0200     		.2byte	0x2
 1893 020a 7D       		.byte	0x7d
 1894 020b 00       		.sleb128 0
 1895 020c 02000000 		.4byte	.LCFI26
 1896 0210 04000000 		.4byte	.LCFI27
 1897 0214 0200     		.2byte	0x2
 1898 0216 7D       		.byte	0x7d
 1899 0217 08       		.sleb128 8
 1900 0218 04000000 		.4byte	.LCFI27
 1901 021c 06000000 		.4byte	.LCFI28
 1902 0220 0200     		.2byte	0x2
 1903 0222 7D       		.byte	0x7d
 1904 0223 18       		.sleb128 24
 1905 0224 06000000 		.4byte	.LCFI28
 1906 0228 48000000 		.4byte	.LFE10
 1907 022c 0200     		.2byte	0x2
 1908 022e 77       		.byte	0x77
 1909 022f 18       		.sleb128 24
 1910 0230 00000000 		.4byte	0
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 63


 1911 0234 00000000 		.4byte	0
 1912              	.LLST11:
 1913 0238 00000000 		.4byte	.LFB11
 1914 023c 02000000 		.4byte	.LCFI29
 1915 0240 0200     		.2byte	0x2
 1916 0242 7D       		.byte	0x7d
 1917 0243 00       		.sleb128 0
 1918 0244 02000000 		.4byte	.LCFI29
 1919 0248 04000000 		.4byte	.LCFI30
 1920 024c 0200     		.2byte	0x2
 1921 024e 7D       		.byte	0x7d
 1922 024f 08       		.sleb128 8
 1923 0250 04000000 		.4byte	.LCFI30
 1924 0254 06000000 		.4byte	.LCFI31
 1925 0258 0200     		.2byte	0x2
 1926 025a 7D       		.byte	0x7d
 1927 025b 18       		.sleb128 24
 1928 025c 06000000 		.4byte	.LCFI31
 1929 0260 46000000 		.4byte	.LFE11
 1930 0264 0200     		.2byte	0x2
 1931 0266 77       		.byte	0x77
 1932 0267 18       		.sleb128 24
 1933 0268 00000000 		.4byte	0
 1934 026c 00000000 		.4byte	0
 1935              	.LLST12:
 1936 0270 00000000 		.4byte	.LFB12
 1937 0274 02000000 		.4byte	.LCFI32
 1938 0278 0200     		.2byte	0x2
 1939 027a 7D       		.byte	0x7d
 1940 027b 00       		.sleb128 0
 1941 027c 02000000 		.4byte	.LCFI32
 1942 0280 04000000 		.4byte	.LCFI33
 1943 0284 0200     		.2byte	0x2
 1944 0286 7D       		.byte	0x7d
 1945 0287 08       		.sleb128 8
 1946 0288 04000000 		.4byte	.LCFI33
 1947 028c 06000000 		.4byte	.LCFI34
 1948 0290 0200     		.2byte	0x2
 1949 0292 7D       		.byte	0x7d
 1950 0293 10       		.sleb128 16
 1951 0294 06000000 		.4byte	.LCFI34
 1952 0298 38000000 		.4byte	.LFE12
 1953 029c 0200     		.2byte	0x2
 1954 029e 77       		.byte	0x77
 1955 029f 10       		.sleb128 16
 1956 02a0 00000000 		.4byte	0
 1957 02a4 00000000 		.4byte	0
 1958              	.LLST13:
 1959 02a8 00000000 		.4byte	.LFB13
 1960 02ac 02000000 		.4byte	.LCFI35
 1961 02b0 0200     		.2byte	0x2
 1962 02b2 7D       		.byte	0x7d
 1963 02b3 00       		.sleb128 0
 1964 02b4 02000000 		.4byte	.LCFI35
 1965 02b8 04000000 		.4byte	.LCFI36
 1966 02bc 0200     		.2byte	0x2
 1967 02be 7D       		.byte	0x7d
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 64


 1968 02bf 04       		.sleb128 4
 1969 02c0 04000000 		.4byte	.LCFI36
 1970 02c4 06000000 		.4byte	.LCFI37
 1971 02c8 0200     		.2byte	0x2
 1972 02ca 7D       		.byte	0x7d
 1973 02cb 10       		.sleb128 16
 1974 02cc 06000000 		.4byte	.LCFI37
 1975 02d0 4A000000 		.4byte	.LFE13
 1976 02d4 0200     		.2byte	0x2
 1977 02d6 77       		.byte	0x77
 1978 02d7 10       		.sleb128 16
 1979 02d8 00000000 		.4byte	0
 1980 02dc 00000000 		.4byte	0
 1981              	.LLST14:
 1982 02e0 00000000 		.4byte	.LFB14
 1983 02e4 02000000 		.4byte	.LCFI38
 1984 02e8 0200     		.2byte	0x2
 1985 02ea 7D       		.byte	0x7d
 1986 02eb 00       		.sleb128 0
 1987 02ec 02000000 		.4byte	.LCFI38
 1988 02f0 04000000 		.4byte	.LCFI39
 1989 02f4 0200     		.2byte	0x2
 1990 02f6 7D       		.byte	0x7d
 1991 02f7 08       		.sleb128 8
 1992 02f8 04000000 		.4byte	.LCFI39
 1993 02fc 06000000 		.4byte	.LCFI40
 1994 0300 0200     		.2byte	0x2
 1995 0302 7D       		.byte	0x7d
 1996 0303 10       		.sleb128 16
 1997 0304 06000000 		.4byte	.LCFI40
 1998 0308 56000000 		.4byte	.LFE14
 1999 030c 0200     		.2byte	0x2
 2000 030e 77       		.byte	0x77
 2001 030f 10       		.sleb128 16
 2002 0310 00000000 		.4byte	0
 2003 0314 00000000 		.4byte	0
 2004              	.LLST15:
 2005 0318 00000000 		.4byte	.LFB15
 2006 031c 02000000 		.4byte	.LCFI41
 2007 0320 0200     		.2byte	0x2
 2008 0322 7D       		.byte	0x7d
 2009 0323 00       		.sleb128 0
 2010 0324 02000000 		.4byte	.LCFI41
 2011 0328 04000000 		.4byte	.LCFI42
 2012 032c 0200     		.2byte	0x2
 2013 032e 7D       		.byte	0x7d
 2014 032f 04       		.sleb128 4
 2015 0330 04000000 		.4byte	.LCFI42
 2016 0334 06000000 		.4byte	.LCFI43
 2017 0338 0200     		.2byte	0x2
 2018 033a 7D       		.byte	0x7d
 2019 033b 18       		.sleb128 24
 2020 033c 06000000 		.4byte	.LCFI43
 2021 0340 C4000000 		.4byte	.LFE15
 2022 0344 0200     		.2byte	0x2
 2023 0346 77       		.byte	0x77
 2024 0347 18       		.sleb128 24
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 65


 2025 0348 00000000 		.4byte	0
 2026 034c 00000000 		.4byte	0
 2027              	.LLST16:
 2028 0350 00000000 		.4byte	.LFB16
 2029 0354 02000000 		.4byte	.LCFI44
 2030 0358 0200     		.2byte	0x2
 2031 035a 7D       		.byte	0x7d
 2032 035b 00       		.sleb128 0
 2033 035c 02000000 		.4byte	.LCFI44
 2034 0360 04000000 		.4byte	.LCFI45
 2035 0364 0200     		.2byte	0x2
 2036 0366 7D       		.byte	0x7d
 2037 0367 04       		.sleb128 4
 2038 0368 04000000 		.4byte	.LCFI45
 2039 036c 06000000 		.4byte	.LCFI46
 2040 0370 0200     		.2byte	0x2
 2041 0372 7D       		.byte	0x7d
 2042 0373 10       		.sleb128 16
 2043 0374 06000000 		.4byte	.LCFI46
 2044 0378 14000000 		.4byte	.LFE16
 2045 037c 0200     		.2byte	0x2
 2046 037e 77       		.byte	0x77
 2047 037f 10       		.sleb128 16
 2048 0380 00000000 		.4byte	0
 2049 0384 00000000 		.4byte	0
 2050              		.section	.debug_aranges,"",%progbits
 2051 0000 9C000000 		.4byte	0x9c
 2052 0004 0200     		.2byte	0x2
 2053 0006 00000000 		.4byte	.Ldebug_info0
 2054 000a 04       		.byte	0x4
 2055 000b 00       		.byte	0
 2056 000c 0000     		.2byte	0
 2057 000e 0000     		.2byte	0
 2058 0010 00000000 		.4byte	.LFB0
 2059 0014 2A000000 		.4byte	.LFE0-.LFB0
 2060 0018 00000000 		.4byte	.LFB1
 2061 001c 34000000 		.4byte	.LFE1-.LFB1
 2062 0020 00000000 		.4byte	.LFB2
 2063 0024 3E000000 		.4byte	.LFE2-.LFB2
 2064 0028 00000000 		.4byte	.LFB3
 2065 002c 3E000000 		.4byte	.LFE3-.LFB3
 2066 0030 00000000 		.4byte	.LFB4
 2067 0034 10000000 		.4byte	.LFE4-.LFB4
 2068 0038 00000000 		.4byte	.LFB5
 2069 003c 14000000 		.4byte	.LFE5-.LFB5
 2070 0040 00000000 		.4byte	.LFB6
 2071 0044 20000000 		.4byte	.LFE6-.LFB6
 2072 0048 00000000 		.4byte	.LFB7
 2073 004c 2E000000 		.4byte	.LFE7-.LFB7
 2074 0050 00000000 		.4byte	.LFB8
 2075 0054 18000000 		.4byte	.LFE8-.LFB8
 2076 0058 00000000 		.4byte	.LFB9
 2077 005c 36000000 		.4byte	.LFE9-.LFB9
 2078 0060 00000000 		.4byte	.LFB10
 2079 0064 48000000 		.4byte	.LFE10-.LFB10
 2080 0068 00000000 		.4byte	.LFB11
 2081 006c 46000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 66


 2082 0070 00000000 		.4byte	.LFB12
 2083 0074 38000000 		.4byte	.LFE12-.LFB12
 2084 0078 00000000 		.4byte	.LFB13
 2085 007c 4A000000 		.4byte	.LFE13-.LFB13
 2086 0080 00000000 		.4byte	.LFB14
 2087 0084 56000000 		.4byte	.LFE14-.LFB14
 2088 0088 00000000 		.4byte	.LFB15
 2089 008c C4000000 		.4byte	.LFE15-.LFB15
 2090 0090 00000000 		.4byte	.LFB16
 2091 0094 14000000 		.4byte	.LFE16-.LFB16
 2092 0098 00000000 		.4byte	0
 2093 009c 00000000 		.4byte	0
 2094              		.section	.debug_ranges,"",%progbits
 2095              	.Ldebug_ranges0:
 2096 0000 00000000 		.4byte	.LFB0
 2097 0004 2A000000 		.4byte	.LFE0
 2098 0008 00000000 		.4byte	.LFB1
 2099 000c 34000000 		.4byte	.LFE1
 2100 0010 00000000 		.4byte	.LFB2
 2101 0014 3E000000 		.4byte	.LFE2
 2102 0018 00000000 		.4byte	.LFB3
 2103 001c 3E000000 		.4byte	.LFE3
 2104 0020 00000000 		.4byte	.LFB4
 2105 0024 10000000 		.4byte	.LFE4
 2106 0028 00000000 		.4byte	.LFB5
 2107 002c 14000000 		.4byte	.LFE5
 2108 0030 00000000 		.4byte	.LFB6
 2109 0034 20000000 		.4byte	.LFE6
 2110 0038 00000000 		.4byte	.LFB7
 2111 003c 2E000000 		.4byte	.LFE7
 2112 0040 00000000 		.4byte	.LFB8
 2113 0044 18000000 		.4byte	.LFE8
 2114 0048 00000000 		.4byte	.LFB9
 2115 004c 36000000 		.4byte	.LFE9
 2116 0050 00000000 		.4byte	.LFB10
 2117 0054 48000000 		.4byte	.LFE10
 2118 0058 00000000 		.4byte	.LFB11
 2119 005c 46000000 		.4byte	.LFE11
 2120 0060 00000000 		.4byte	.LFB12
 2121 0064 38000000 		.4byte	.LFE12
 2122 0068 00000000 		.4byte	.LFB13
 2123 006c 4A000000 		.4byte	.LFE13
 2124 0070 00000000 		.4byte	.LFB14
 2125 0074 56000000 		.4byte	.LFE14
 2126 0078 00000000 		.4byte	.LFB15
 2127 007c C4000000 		.4byte	.LFE15
 2128 0080 00000000 		.4byte	.LFB16
 2129 0084 14000000 		.4byte	.LFE16
 2130 0088 00000000 		.4byte	0
 2131 008c 00000000 		.4byte	0
 2132              		.section	.debug_line,"",%progbits
 2133              	.Ldebug_line0:
 2134 0000 05020000 		.section	.debug_str,"MS",%progbits,1
 2134      02004900 
 2134      00000201 
 2134      FB0E0D00 
 2134      01010101 
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 67


 2135              	.LASF6:
 2136 0000 6C6F6E67 		.ascii	"long long int\000"
 2136      206C6F6E 
 2136      6720696E 
 2136      7400
 2137              	.LASF38:
 2138 000e 44454255 		.ascii	"DEBUG_UART_ClearTxBuffer\000"
 2138      475F5541 
 2138      52545F43 
 2138      6C656172 
 2138      54784275 
 2139              	.LASF31:
 2140 0027 44454255 		.ascii	"DEBUG_UART_PutString\000"
 2140      475F5541 
 2140      52545F50 
 2140      75745374 
 2140      72696E67 
 2141              	.LASF43:
 2142 003c 44454255 		.ascii	"DEBUG_UART_SetTxAddressMode\000"
 2142      475F5541 
 2142      52545F53 
 2142      65745478 
 2142      41646472 
 2143              	.LASF36:
 2144 0058 44454255 		.ascii	"DEBUG_UART_PutCRLF\000"
 2144      475F5541 
 2144      52545F50 
 2144      75744352 
 2144      4C4600
 2145              	.LASF28:
 2146 006b 44454255 		.ascii	"DEBUG_UART_ReadControlRegister\000"
 2146      475F5541 
 2146      52545F52 
 2146      65616443 
 2146      6F6E7472 
 2147              	.LASF34:
 2148 008a 44454255 		.ascii	"DEBUG_UART_PutArray\000"
 2148      475F5541 
 2148      52545F50 
 2148      75744172 
 2148      72617900 
 2149              	.LASF41:
 2150 009e 746D7053 		.ascii	"tmpStat\000"
 2150      74617400 
 2151              	.LASF23:
 2152 00a6 44454255 		.ascii	"DEBUG_UART_SetTxInterruptMode\000"
 2152      475F5541 
 2152      52545F53 
 2152      65745478 
 2152      496E7465 
 2153              	.LASF3:
 2154 00c4 73686F72 		.ascii	"short unsigned int\000"
 2154      7420756E 
 2154      7369676E 
 2154      65642069 
 2154      6E7400
 2155              	.LASF46:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 68


 2156 00d7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\DEBUG_UART.c\000"
 2156      6E657261 
 2156      7465645F 
 2156      536F7572 
 2156      63655C50 
 2157              	.LASF32:
 2158 00fd 73747269 		.ascii	"string\000"
 2158      6E6700
 2159              	.LASF11:
 2160 0104 666C6F61 		.ascii	"float\000"
 2160      7400
 2161              	.LASF47:
 2162 010a 433A5C55 		.ascii	"C:\\Users\\Mark\\Documents\\Capstone\\GitRepo\\psoc"
 2162      73657273 
 2162      5C4D6172 
 2162      6B5C446F 
 2162      63756D65 
 2163 0137 5F325F70 		.ascii	"_2_pi\\PSoC Creator\\PSoC_2_Pi.cydsn\000"
 2163      695C5053 
 2163      6F432043 
 2163      72656174 
 2163      6F725C50 
 2164              	.LASF44:
 2165 015a 61646472 		.ascii	"addressMode\000"
 2165      6573734D 
 2165      6F646500 
 2166              	.LASF15:
 2167 0166 72656738 		.ascii	"reg8\000"
 2167      00
 2168              	.LASF5:
 2169 016b 6C6F6E67 		.ascii	"long unsigned int\000"
 2169      20756E73 
 2169      69676E65 
 2169      6420696E 
 2169      7400
 2170              	.LASF9:
 2171 017d 75696E74 		.ascii	"uint8\000"
 2171      3800
 2172              	.LASF24:
 2173 0183 636F6E74 		.ascii	"control\000"
 2173      726F6C00 
 2174              	.LASF35:
 2175 018b 62797465 		.ascii	"byteCount\000"
 2175      436F756E 
 2175      7400
 2176              	.LASF21:
 2177 0195 656E6162 		.ascii	"enableInterrupts\000"
 2177      6C65496E 
 2177      74657272 
 2177      75707473 
 2177      00
 2178              	.LASF30:
 2179 01a6 44454255 		.ascii	"DEBUG_UART_PutChar\000"
 2179      475F5541 
 2179      52545F50 
 2179      75744368 
 2179      617200
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 69


 2180              	.LASF26:
 2181 01b9 44454255 		.ascii	"DEBUG_UART_WriteTxData\000"
 2181      475F5541 
 2181      52545F57 
 2181      72697465 
 2181      54784461 
 2182              	.LASF22:
 2183 01d0 44454255 		.ascii	"DEBUG_UART_WriteControlRegister\000"
 2183      475F5541 
 2183      52545F57 
 2183      72697465 
 2183      436F6E74 
 2184              	.LASF12:
 2185 01f0 646F7562 		.ascii	"double\000"
 2185      6C6500
 2186              	.LASF25:
 2187 01f7 696E7453 		.ascii	"intSrc\000"
 2187      726300
 2188              	.LASF33:
 2189 01fe 6275665F 		.ascii	"buf_index\000"
 2189      696E6465 
 2189      7800
 2190              	.LASF19:
 2191 0208 44454255 		.ascii	"DEBUG_UART_Enable\000"
 2191      475F5541 
 2191      52545F45 
 2191      6E61626C 
 2191      6500
 2192              	.LASF10:
 2193 021a 75696E74 		.ascii	"uint16\000"
 2193      313600
 2194              	.LASF17:
 2195 0221 44454255 		.ascii	"DEBUG_UART_Start\000"
 2195      475F5541 
 2195      52545F53 
 2195      74617274 
 2195      00
 2196              	.LASF18:
 2197 0232 44454255 		.ascii	"DEBUG_UART_Init\000"
 2197      475F5541 
 2197      52545F49 
 2197      6E697400 
 2198              	.LASF1:
 2199 0242 756E7369 		.ascii	"unsigned char\000"
 2199      676E6564 
 2199      20636861 
 2199      7200
 2200              	.LASF8:
 2201 0250 756E7369 		.ascii	"unsigned int\000"
 2201      676E6564 
 2201      20696E74 
 2201      00
 2202              	.LASF37:
 2203 025d 73697A65 		.ascii	"size\000"
 2203      00
 2204              	.LASF7:
 2205 0262 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 70


 2205      206C6F6E 
 2205      6720756E 
 2205      7369676E 
 2205      65642069 
 2206              	.LASF16:
 2207 0279 73697A65 		.ascii	"sizetype\000"
 2207      74797065 
 2207      00
 2208              	.LASF13:
 2209 0282 63686172 		.ascii	"char8\000"
 2209      3800
 2210              	.LASF27:
 2211 0288 74784461 		.ascii	"txDataByte\000"
 2211      74614279 
 2211      746500
 2212              	.LASF42:
 2213 0293 74785F70 		.ascii	"tx_period\000"
 2213      6572696F 
 2213      6400
 2214              	.LASF14:
 2215 029d 63686172 		.ascii	"char\000"
 2215      00
 2216              	.LASF40:
 2217 02a2 7265744D 		.ascii	"retMode\000"
 2217      6F646500 
 2218              	.LASF2:
 2219 02aa 73686F72 		.ascii	"short int\000"
 2219      7420696E 
 2219      7400
 2220              	.LASF39:
 2221 02b4 44454255 		.ascii	"DEBUG_UART_SendBreak\000"
 2221      475F5541 
 2221      52545F53 
 2221      656E6442 
 2221      7265616B 
 2222              	.LASF48:
 2223 02c9 44454255 		.ascii	"DEBUG_UART_GetTxBufferSize\000"
 2223      475F5541 
 2223      52545F47 
 2223      65745478 
 2223      42756666 
 2224              	.LASF45:
 2225 02e4 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2225      4320342E 
 2225      372E3320 
 2225      32303133 
 2225      30333132 
 2226 0317 616E6368 		.ascii	"anch revision 196615]\000"
 2226      20726576 
 2226      6973696F 
 2226      6E203139 
 2226      36363135 
 2227              	.LASF4:
 2228 032d 6C6F6E67 		.ascii	"long int\000"
 2228      20696E74 
 2228      00
 2229              	.LASF20:
ARM GAS  C:\Users\Mark\AppData\Local\Temp\ccMUWMIC.s 			page 71


 2230 0336 44454255 		.ascii	"DEBUG_UART_Stop\000"
 2230      475F5541 
 2230      52545F53 
 2230      746F7000 
 2231              	.LASF0:
 2232 0346 7369676E 		.ascii	"signed char\000"
 2232      65642063 
 2232      68617200 
 2233              	.LASF49:
 2234 0352 44454255 		.ascii	"DEBUG_UART_initVar\000"
 2234      475F5541 
 2234      52545F69 
 2234      6E697456 
 2234      617200
 2235              	.LASF29:
 2236 0365 44454255 		.ascii	"DEBUG_UART_ReadTxStatus\000"
 2236      475F5541 
 2236      52545F52 
 2236      65616454 
 2236      78537461 
 2237              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
